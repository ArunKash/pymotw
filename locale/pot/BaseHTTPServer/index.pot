# SOME DESCRIPTIVE TITLE.
# Copyright (C) Doug Hellmann
# This file is distributed under the same license as the Python Module of the Week package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python Module of the Week 2.1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-10-06 02:58-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../PyMOTW/BaseHTTPServer/index.rst:3
# 2d20a5e1e41347f792a9522ec4570efd
msgid "BaseHTTPServer -- base classes for implementing web servers"
msgstr ""

#: ../../PyMOTW/BaseHTTPServer/index.rst:8
# f111ec750f304f67b69fc278300b83b7
msgid "BaseHTTPServer includes classes that can form the basis of a web server."
msgstr ""

#: ../../PyMOTW/BaseHTTPServer/index.rst:9
# 192983cb652a4045980a0f16f4e32bc5
msgid "1.4 and later"
msgstr ""

#: ../../PyMOTW/BaseHTTPServer/index.rst:12
# 98b9e16135dd421e9904c8082cdb1cfb
msgid ":mod:`BaseHTTPServer` uses classes from :mod:`SocketServer` to create base classes for making HTTP servers. :class:`HTTPServer` can be used directly, but the :class:`BaseHTTPRequestHandler` is intended to be extended to handle each protocol method (GET, POST, etc.)."
msgstr ""

#: ../../PyMOTW/BaseHTTPServer/index.rst:18
# 125a7bcccc624a958fc161f10850d241
msgid "HTTP GET"
msgstr ""

#: ../../PyMOTW/BaseHTTPServer/index.rst:20
# ecc2da77b7584bfbbeee3e0d55ebce5a
msgid "To add support for an HTTP method in your request handler class, implement the method :func:`do_METHOD`, replacing *METHOD* with the name of the HTTP method. For example, :func:`do_GET`, :func:`do_POST`, etc. For consistency, the method takes no arguments. All of the parameters for the request are parsed by :class:`BaseHTTPRequestHandler` and stored as instance attributes of the request instance."
msgstr ""

#: ../../PyMOTW/BaseHTTPServer/index.rst:28
# 3623c6f4815b417e8538c55c926b5806
msgid "This example request handler illustrates how to return a response to the client and some of the local attributes which can be useful in building the response:"
msgstr ""

#: ../../PyMOTW/BaseHTTPServer/index.rst:36
# 2406b355ce4e4919b95b40564aa0a458
msgid "The message text is assembled and then written to :attr:`wfile`, the file handle wrapping the response socket. Each response needs a response code, set via :func:`send_response`. If an error code is used (404, 501, etc.), an appropriate default error message is included in the header, or a message can be passed with the error code."
msgstr ""

#: ../../PyMOTW/BaseHTTPServer/index.rst:42
# 2e6de217a0a64da9a11c186fcc142db8
msgid "To run the request handler in a server, pass it to the constructor of HTTPServer, as in the ``__main__`` processing portion of the sample script."
msgstr ""

#: ../../PyMOTW/BaseHTTPServer/index.rst:45
# 930ac5f018eb4a4db84cb0621c6273df
msgid "Then start the server:"
msgstr ""

#: ../../PyMOTW/BaseHTTPServer/index.rst:52
# 2320bc3d9653471792fa77b2385ee4ce
msgid "In a separate terminal, use :command:`curl` to access it:"
msgstr ""

#: ../../PyMOTW/BaseHTTPServer/index.rst:76
# 0e9f714f38d440ebb6158506528beaf7
msgid "HTTP POST"
msgstr ""

#: ../../PyMOTW/BaseHTTPServer/index.rst:78
# 883ce43db7ba4112a490f717867d8a4e
msgid "Supporting POST requests is a little more work, because the base class does not parse the form data for us. The :mod:`cgi` module provides the :class:`FieldStorage` class which knows how to parse the form, if it is given the correct inputs."
msgstr ""

#: ../../PyMOTW/BaseHTTPServer/index.rst:87
# 76fca48bf613461eac22d592742ddee6
msgid ":command:`curl` can include form data in the message it posts to the server. The last argument, ``-F datafile=@BaseHTTPServer_GET.py``, posts the contents of the file ``BaseHTTPServer_GET.py`` to illustrate reading file data from the form."
msgstr ""

#: ../../PyMOTW/BaseHTTPServer/index.rst:104
# c8df458568be479fae9e87a46e1ed187
msgid "Threading and Forking"
msgstr ""

#: ../../PyMOTW/BaseHTTPServer/index.rst:106
# 5a3516d1034b4d21a63d0d021c3afb53
msgid ":class:`HTTPServer` is a simple subclass of :class:`SocketServer.TCPServer`, and does not use multiple threads or processes to handle requests. To add threading or forking, create a new class using the appropriate mix-in from :mod:`SocketServer`."
msgstr ""

#: ../../PyMOTW/BaseHTTPServer/index.rst:115
# 1f14094906694e3185a04faa46eaa0b9
msgid "Each time a request comes in, a new thread or process is created to handle it:"
msgstr ""

#: ../../PyMOTW/BaseHTTPServer/index.rst:127
# afa80d58c25045f2b6a37c4cde4a0059
msgid "Swapping :class:`ForkingMixIn` for :class:`ThreadingMixIn` above would achieve similar results, using separate processes instead of threads."
msgstr ""

#: ../../PyMOTW/BaseHTTPServer/index.rst:131
# 313330aca82140e98d4dc54688e7543f
msgid "Handling Errors"
msgstr ""

#: ../../PyMOTW/BaseHTTPServer/index.rst:133
# 922032b1fa624da29503b7cd6c75f33d
msgid "Error handling is made easy with :meth:`send_error()`. Simply pass the appropriate error code and an optional error message, and the entire response (with headers, status code, and body) is generated automatically."
msgstr ""

#: ../../PyMOTW/BaseHTTPServer/index.rst:142
# 382de27f5faa4701a3034144393588de
msgid "In this case, a 404 error is always returned."
msgstr ""

#: ../../PyMOTW/BaseHTTPServer/index.rst:164
# a47605d883384c06a08ea12efee235e7
msgid "Setting Headers"
msgstr ""

#: ../../PyMOTW/BaseHTTPServer/index.rst:166
# 50d43031b3d647a7a106a6d32b720b9d
msgid "The :mod:`send_header` method adds header data to the HTTP response. It takes two arguments, the name of the header and the value."
msgstr ""

#: ../../PyMOTW/BaseHTTPServer/index.rst:173
# df3b72d28564470e876c1cc246e55f31
msgid "This example sets the ``Last-Modified`` header to the current timestamp formatted according to :rfc:`2822`."
msgstr ""

#: ../../PyMOTW/BaseHTTPServer/index.rst:190
# 24e3087ab92d4871b5e84ce119e5f5cc
msgid "`BaseHTTPServer <http://docs.python.org/library/basehttpserver.html>`_"
msgstr ""

#: ../../PyMOTW/BaseHTTPServer/index.rst:190
# 4399e91a6bee4eb093660d4784028312
msgid "The standard library documentation for this module."
msgstr ""

#: ../../PyMOTW/BaseHTTPServer/index.rst:193
# ceed1a125d504e2299e15b3c7aeb826b
msgid ":mod:`SocketServer`"
msgstr ""

#: ../../PyMOTW/BaseHTTPServer/index.rst:193
# a865e3c8a52f4631a53a104e03e14744
msgid "The SocketServer module provides the base class which handles the raw socket connection."
msgstr ""

