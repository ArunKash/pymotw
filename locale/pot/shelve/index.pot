# SOME DESCRIPTIVE TITLE.
# Copyright (C) Doug Hellmann
# This file is distributed under the same license as the Python Module of the Week package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python Module of the Week 2.1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-10-06 02:58-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../PyMOTW/shelve/index.rst:3
# cab16b9060df49c8b97956537c4cd7a4
msgid "shelve -- Persistent storage of arbitrary Python objects"
msgstr ""

#: ../../PyMOTW/shelve/index.rst:8
# 595b42151fb7444d9a9376dd088bf7df
msgid "The shelve module implements persistent storage for arbitrary Python objects which can be pickled, using a dictionary-like API."
msgstr ""

#: ../../PyMOTW/shelve/index.rst:10
# d3921648133545c48baa51df6c0b39df
msgid "The :mod:`shelve` module can be used as a simple persistent storage option for Python objects when a relational database is overkill. The shelf is accessed by keys, just as with a dictionary. The values are pickled and written to a database created and managed by :mod:`anydbm`."
msgstr ""

#: ../../PyMOTW/shelve/index.rst:18
# 6b3c5e85c0774d82b781d5cd03d16098
msgid "Creating a new Shelf"
msgstr ""

#: ../../PyMOTW/shelve/index.rst:20
# 768ed56c74ce4233b1b1586b8232f971
msgid "The simplest way to use shelve is via the :class:`DbfilenameShelf` class. It uses anydbm to store the data. You can use the class directly, or simply call :func:`shelve.open()`:"
msgstr ""

#: ../../PyMOTW/shelve/index.rst:28
# 7b88af292bf44536ba99543b154f71e8
msgid "To access the data again, open the shelf and use it like a dictionary:"
msgstr ""

#: ../../PyMOTW/shelve/index.rst:34
# bbf0c1cd52d54711bd24477e4d2f909d
msgid "If you run both sample scripts, you should see:"
msgstr ""

#: ../../PyMOTW/shelve/index.rst:51
# 4aee63032478453fb62640468ad5ade7
msgid "The :mod:`dbm` module does not support multiple applications writing to the same database at the same time. If you know your client will not be modifying the shelf, you can tell shelve to open the database read-only."
msgstr ""

#: ../../PyMOTW/shelve/index.rst:59
# c5edec87815c4e6ab4a35aa8ee3ee02a
msgid "If your program tries to modify the database while it is opened read-only, an access error exception is generated. The exception type depends on the database module selected by anydbm when the database was created."
msgstr ""

#: ../../PyMOTW/shelve/index.rst:65
# d2153021d60b49daa566468dcbfca1ae
msgid "Write-back"
msgstr ""

#: ../../PyMOTW/shelve/index.rst:67
# cfec0efad5b347ffba6f3440fbc3c531
msgid "Shelves do not track modifications to volatile objects, by default. That means if you change the contents of an item stored in the shelf, you must update the shelf explicitly by storing the item again."
msgstr ""

#: ../../PyMOTW/shelve/index.rst:75
# 2ea0002d2d33458d84f518e2cf7a676f
msgid "In this example, the dictionary at 'key1' is not stored again, so when the shelf is re-opened, the changes have not been preserved."
msgstr ""

#: ../../PyMOTW/shelve/index.rst:93
# 683403774d1340a181608c36133576e1
msgid "To automatically catch changes to volatile objects stored in the shelf, open the shelf with writeback enabled. The writeback flag causes the shelf to remember all of the objects retrieved from the database using an in-memory cache. Each cache object is also written back to the database when the shelf is closed."
msgstr ""

#: ../../PyMOTW/shelve/index.rst:103
# 0a5d849b5814460db5a5d5d47ef2ede9
msgid "Although it reduces the chance of programmer error, and can make object persistence more transparent, using writeback mode may not be desirable in every situation. The cache consumes extra memory while the shelf is open, and pausing to write every cached object back to the database when it is closed can take extra time. Since there is no way to tell if the cached objects have been modified, they are all written back. If your application reads data more than it writes, writeback will add more overhead than you might want."
msgstr ""

#: ../../PyMOTW/shelve/index.rst:143
# 40082b433cc84d47b11ca9c7d23c7e65
msgid "Specific Shelf Types"
msgstr ""

#: ../../PyMOTW/shelve/index.rst:145
# f628b9b9d5ef4536b6cb0f6d08f206b9
msgid "The examples above all use the default shelf implementation. Using :func:`shelve.open()` instead of one of the shelf implementations directly is a common usage pattern, especially if you do not care what type of database is used to store the data. There are times, however, when you do care. In those situations, you may want to use :class:`DbfilenameShelf` or :class:`BsdDbShelf` directly, or even subclass :class:`Shelf` for a custom solution."
msgstr ""

#: ../../PyMOTW/shelve/index.rst:156
# 2caeca0873d54fa8885022342f446141
msgid "`shelve <http://docs.python.org/lib/module-shelve.html>`_"
msgstr ""

#: ../../PyMOTW/shelve/index.rst:156
# bcedf0f5127e46db8df270ab5e02fec8
msgid "Standard library documentation for this module."
msgstr ""

#: ../../PyMOTW/shelve/index.rst:159
# 3752302e98b64c1e89c67ed16f4beb9a
msgid ":mod:`anydbm`"
msgstr ""

#: ../../PyMOTW/shelve/index.rst:159
# e81fdd230f00496b8d3a61439a94f3d3
msgid "The anydbm module."
msgstr ""

#: ../../PyMOTW/shelve/index.rst:162
# bba9a6b07faa4d8e81418c0a5fa789e8
msgid "`feedcache <http://www.doughellmann.com/projects/feedcache/>`_"
msgstr ""

#: ../../PyMOTW/shelve/index.rst:162
# 9b3aface89784954aea2181dd1c3eb35
msgid "The feedcache module uses shelve as a default storage option."
msgstr ""

#: ../../PyMOTW/shelve/index.rst:165
# 69e39201069b438791d296522dceeced
msgid "`shove <http://pypi.python.org/pypi/shove/>`_"
msgstr ""

#: ../../PyMOTW/shelve/index.rst:165
# e814c6605966427b96d09989ba07fac8
msgid "Shove implements a similar API with more backend formats."
msgstr ""

#: ../../PyMOTW/shelve/index.rst:167
# 09afed32f5874e7abb87d6f6804a80bb
msgid ":ref:`article-data-persistence`"
msgstr ""

#: ../../PyMOTW/shelve/index.rst:168
# 18344837ace6437a973c96da1e44a6bf
msgid "Other mechanisms for storing data using standard library modules."
msgstr ""

