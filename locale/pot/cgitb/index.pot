# SOME DESCRIPTIVE TITLE.
# Copyright (C) Doug Hellmann
# This file is distributed under the same license as the Python Module of the Week package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python Module of the Week 2.1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-10-06 02:58-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../PyMOTW/cgitb/index.rst:3
# 5c68bf239eff4246b5e5ee956f445cd3
msgid "cgitb -- Detailed traceback reports"
msgstr ""

#: ../../PyMOTW/cgitb/index.rst:8
# 40158ed2f9de4f118a66ed887a5af088
msgid "cgitb provides more detailed traceback information than :mod:`traceback`."
msgstr ""

#: ../../PyMOTW/cgitb/index.rst:9
# bb792967f0694f8f86d614670c712c41
msgid "2.2 and later"
msgstr ""

#: ../../PyMOTW/cgitb/index.rst:11
# dc6e29d1afb64ac7b914b41d3ee731e5
msgid ":mod:`cgitb` was originally designed for showing errors and debugging information in web applications.  It was later updated to include plain-text output as well, but unfortunately wasn't renamed.  This has led to obscurity and the module is not used as often as it should be. Nonetheless, :mod:`cgitb` is a valuable debugging tool in the standard library."
msgstr ""

#: ../../PyMOTW/cgitb/index.rst:19
# cc634ec257ab4987b24a17328ade13a2
msgid "Standard Traceback Dumps"
msgstr ""

#: ../../PyMOTW/cgitb/index.rst:21
# f63b8f0bb7c441319b033104c98ef5ee
msgid "Python's default exception handling behavior is to print a *traceback* to standard error with the call stack leading up to the error position.  This basic output frequently contains enough information to understand the cause of the exception and permit a fix."
msgstr ""

#: ../../PyMOTW/cgitb/index.rst:30
# 2daba03efa924f82841d163024d81c1c
msgid "The above sample program has a subtle error in :func:`func3()`."
msgstr ""

#: ../../PyMOTW/cgitb/index.rst:52
# 4a22b5d167a74acf8bd2cc44bf3c79ff
msgid "Enabling Detailed Tracebacks"
msgstr ""

#: ../../PyMOTW/cgitb/index.rst:54
# b90d6558dd904540a4a93d3ce43a174b
msgid "While the basic traceback includes enough information for us to spot the error, enabling cgitb replaces ``sys.excepthook`` with a function that gives extended tracebacks with even more detail."
msgstr ""

#: ../../PyMOTW/cgitb/index.rst:62
# 49eee691b4c84be380fb623d0857057c
msgid "As you can see below, the error report is much more extensive.  Each frame of the stack is listed, along with:"
msgstr ""

#: ../../PyMOTW/cgitb/index.rst:65
# 30eeb37e91ac4f88bd2515d6b258d77b
msgid "the full path to the source file, instead of just the base name"
msgstr ""

#: ../../PyMOTW/cgitb/index.rst:66
# c7cd0fdb2adf42ab8ccc94d9f6a83172
msgid "the values of the arguments to each function in the stack"
msgstr ""

#: ../../PyMOTW/cgitb/index.rst:67
# 2e2ff44395ff4ca090645afb33facdd4
msgid "a few lines of source context from around the line in the error path"
msgstr ""

#: ../../PyMOTW/cgitb/index.rst:68
# 447c9864deb7403ca763315292deb5ce
msgid "the values of variables in the expression causing the error"
msgstr ""

#: ../../PyMOTW/cgitb/index.rst:161
# 84d595aa396c4b7eb652bb62a1c81157
msgid "The end of the output also includes the full details of the exception object (in case it has attributes other than ``message`` that would be useful for debugging) and the original form of a traceback dump."
msgstr ""

#: ../../PyMOTW/cgitb/index.rst:166
# 5ca2eed69ca14743bfbdad638c0cd46f
msgid "Local Variables in Tracebacks"
msgstr ""

#: ../../PyMOTW/cgitb/index.rst:168
# 380b322e1bf140728129dd63f7873001
msgid "Having access to the variables involved in the error stack can help find a logical error that occurs somewhere higher in the stack than the line where the actual exception is generated."
msgstr ""

#: ../../PyMOTW/cgitb/index.rst:176
# c1236961a99144c89b8be2673761c652
msgid "In the case of this code with a :ref:`ZeroDivisionError <exceptions-ZeroDivisionError>`, we can see that the problem is introduced in the computation of the value of ``c`` in ``func1()``, rather than where the value is used in ``func2()``."
msgstr ""

#: ../../PyMOTW/cgitb/index.rst:262
# 33aa329466454a7ba802eb237b922040
msgid "The code in :mod:`cgitb` that examines the variables used in the stack frame leading to the error is smart enough to evaluate object attributes to display them, too."
msgstr ""

#: ../../PyMOTW/cgitb/index.rst:270
# f93109f6aed94855a5fab738e0c2c220
msgid "Here we see that ``self.a`` and ``self.b`` are involved in the error-prone code."
msgstr ""

#: ../../PyMOTW/cgitb/index.rst:363
# 32a0596b70da4f54a7ff072d3eeeff76
msgid "Adding More Context"
msgstr ""

#: ../../PyMOTW/cgitb/index.rst:365
# c30fe30177af4b778e69dff4ab917ea9
msgid "Suppose your function includes a lot of inline comments, whitespace, or other code that makes it very long.  Having the default of 5 lines of context may not be enough help in that case, if the body of the function is pushed out of the code window displayed.  Using a larger context value when enabling cgitb gets around this."
msgstr ""

#: ../../PyMOTW/cgitb/index.rst:375
# cbb04b265a2b44bf84eb493f57b2ecd8
msgid "You can pass *context* to :func:`enable()` to control the amount of code displayed for each line of the traceback."
msgstr ""

#: ../../PyMOTW/cgitb/index.rst:459
# 2e7dd8c6441a471f8652f6ea63f4370a
msgid "Increasing the value gets us enough of the function that we can spot the problem in the code, again."
msgstr ""

#: ../../PyMOTW/cgitb/index.rst:560
# f5968ba2ad4348c3ae7ff56a1c6c3b37
msgid "Exception Properties"
msgstr ""

#: ../../PyMOTW/cgitb/index.rst:562
# 15b92c1b5e1a4419adef489c0c33a09e
msgid "In addition to the local variables from each stack frame, :mod:`cgitb` shows all properties of the exception object.  If you have a custom exception type with extra properties, they are printed as part of the error report."
msgstr ""

#: ../../PyMOTW/cgitb/index.rst:571
# 1b2614122c6e47e2ab5f8d39ef594dc6
msgid "In this example, the *bad_value* property is included along with the standard *message* and *args* values."
msgstr ""

#: ../../PyMOTW/cgitb/index.rst:639
# 12a51ad44dcc4bff85025fc844048f4a
msgid "Logging Tracebacks"
msgstr ""

#: ../../PyMOTW/cgitb/index.rst:641
# bd03dc5d51a4464a8174ac74344c2b5e
msgid "For many situations, printing the traceback details to standard error is the best resolution.  In a production system, however, logging the errors is even better.  :func:`enable()` includes an optional argument, *logdir*, to enable error logging.  When a directory name is provided, each exception is logged to its own file in the given directory."
msgstr ""

#: ../../PyMOTW/cgitb/index.rst:652
# 1f503ffddfc84dfa8766219eedbce47c
msgid "Even though the error display is suppressed, a message is printed describing where to go to find the error log."
msgstr ""

#: ../../PyMOTW/cgitb/index.rst:739
# f6df66604c6d44699d3d8a7a948504f4
msgid "HTML Output"
msgstr ""

#: ../../PyMOTW/cgitb/index.rst:741
# 921ed5e4ee814169a0dc7008eb2dfa22
msgid "Because :mod:`cgitb` was originally developed for handling exceptions in web apps, no discussion would be complete without an example of the HTML output it produces."
msgstr ""

#: ../../PyMOTW/cgitb/index.rst:749
# 19e9a71a7f144f8d9c5c20e3fa0a60db
msgid "By leaving out the *format* argument (or specifying ``html``), the traceback format changes to HTML output."
msgstr ""

#: ../../PyMOTW/cgitb/index.rst:758
# 1024deba382f45f29913f042ee9812b3
msgid "`cgitb <http://docs.python.org/library/cgitb.html>`_"
msgstr ""

#: ../../PyMOTW/cgitb/index.rst:758
# 7ec74ff391f647a7b5c2c8ef99b3b5a3
msgid "The standard library documentation for this module."
msgstr ""

#: ../../PyMOTW/cgitb/index.rst:761
# 4d5722e7ee004ee6be7b1e6d1a489c61
msgid ":mod:`traceback`"
msgstr ""

#: ../../PyMOTW/cgitb/index.rst:761
# 5502fc08bcf94902bafee5507d11cc79
msgid "Standard library module for working with tracebacks."
msgstr ""

#: ../../PyMOTW/cgitb/index.rst:765
# 9257bcb8a5fa48348a6c9146a1efe629
msgid ":mod:`inspect`"
msgstr ""

#: ../../PyMOTW/cgitb/index.rst:764
# 17d540a1991e427b81d2f2be99f1e8cb
msgid "The inspect module includes more functions for examining the stack."
msgstr ""

#: ../../PyMOTW/cgitb/index.rst:770
# a9538ef88004428b9808b8b6e36e69c1
msgid ":mod:`sys`"
msgstr ""

#: ../../PyMOTW/cgitb/index.rst:768
# bea0b530585347939df1f404d9a74d00
msgid "The sys module provides access to the current exception value and the ``excepthook`` handler invoked when an exception occurs."
msgstr ""

#: ../../PyMOTW/cgitb/index.rst:773
# 381514c116e248a2bec0de0b5dfd2ba6
msgid "`Improved traceback module <http://thread.gmane.org/gmane.comp.python.devel/110326>`_"
msgstr ""

#: ../../PyMOTW/cgitb/index.rst:773
# aa56c132f3d2412696258be55ac60349
msgid "Python-dev discussion of improvements to the traceback module and related enhancements other developers use locally."
msgstr ""

