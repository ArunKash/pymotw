# SOME DESCRIPTIVE TITLE.
# Copyright (C) Doug Hellmann
# This file is distributed under the same license as the Python Module of the Week package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python Module of the Week 2.1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-10-06 02:58-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../PyMOTW/shutil/index.rst:3
# fb34d6355bd54de990b76c9f627b24de
msgid "shutil -- High-level file operations."
msgstr ""

#: ../../PyMOTW/shutil/index.rst:8
# eed3d9f4669d42ef9ab742bc12cc8037
msgid "High-level file operations."
msgstr ""

#: ../../PyMOTW/shutil/index.rst:9
# 7e0b3175eaf74d528b9acfe9e3a2d37b
msgid "1.4 and later"
msgstr ""

#: ../../PyMOTW/shutil/index.rst:11
# 9cbf98052e1b4fee8443cec7f2f283d1
msgid "The :mod:`shutil` module includes high-level file operations such as copying, setting permissions, etc."
msgstr ""

#: ../../PyMOTW/shutil/index.rst:15
# 29f008392a9c4e7fb93f377ab2e35786
msgid "Copying Files"
msgstr ""

#: ../../PyMOTW/shutil/index.rst:17
# 86fc4e2573934e159baca6c5a31e6213
msgid ":func:`copyfile()` copies the contents of the source to the destination. Raises :ref:`IOError <exceptions-IOError>` if you do not have permission to write to the destination file.  Because the function opens the input file for reading, regardless of its type, special files cannot be copied as new special files with :func:`copyfile()`."
msgstr ""

#: ../../PyMOTW/shutil/index.rst:43
# bb9f3d35a1394c9bad4e8c4dfb12444a
msgid ":func:`copyfile()` is written using the lower-level function :func:`copyfileobj()`. While the arguments to :func:`copyfile()` are file names, the arguments to :func:`copyfileobj()` are open file handles. The optional third argument is a buffer length to use for reading in chunks (by default, the entire file is read at one time)."
msgstr ""

#: ../../PyMOTW/shutil/index.rst:53
# fe9eeb4717ef409494b76f473ef3ae7a
msgid "The default behavior is to read using large blocks.  Use ``-1`` to read all of the input at one time or another positive integer to set your own block size."
msgstr ""

#: ../../PyMOTW/shutil/index.rst:80
# 0fe849f1dcc247e2a0344fe799b1cb25
msgid "The :func:`copy()` function interprets the output name like the Unix command line tool ``cp``. If the named destination refers to a directory instead of a file, a new file is created in the directory using the base name of the source. The permissions of the file are copied along with the contents."
msgstr ""

#: ../../PyMOTW/shutil/index.rst:105
# 8f27bbc49dff472e86576aea82e5914b
msgid ":func:`copy2()` works like :func:`copy()`, but includes the access and modification times in the meta-data copied to the new file."
msgstr ""

#: ../../PyMOTW/shutil/index.rst:136
# 1f45d39f36f7423d850f8b50a1ac12d7
msgid "Copying File Meta-data"
msgstr ""

#: ../../PyMOTW/shutil/index.rst:138
# 73a2329df7184f289b38c6433a82232c
msgid "By default when a new file is created under Unix, it receives permissions based on the umask of the current user. To copy the permissions from one file to another, use :func:`copymode()`."
msgstr ""

#: ../../PyMOTW/shutil/index.rst:146
# 7fb7f62df16446109080d33366a0a782
msgid "First, create a file to be modified:"
msgstr ""

#: ../../PyMOTW/shutil/index.rst:151
# 4bd8d250640c44b58af63b09ead4902a
msgid "Then run the example script to change the permissions."
msgstr ""

#: ../../PyMOTW/shutil/index.rst:169
# 4823f41cabca4a54a01a4d3b5f6bd881
msgid "To copy other meta-data about the file (permissions, last access time, and last modified time), use :func:`copystat()`."
msgstr ""

#: ../../PyMOTW/shutil/index.rst:199
# 0c182ef4795f4fbfa7b54791870b457e
msgid "Working With Directory Trees"
msgstr ""

#: ../../PyMOTW/shutil/index.rst:201
# 7b04db8310a7447291ed0fe4efb25cc0
msgid ":mod:`shutil` includes 3 functions for working with directory trees. To copy a directory from one place to another, use :func:`copytree()`. It recurses through the source directory tree, copying files to the destination. The destination directory must not exist in advance. The *symlinks* argument controls whether symbolic links are copied as links or as files. The default is to copy the contents to new files. If the option is true, new symlinks are created within the destination tree."
msgstr ""

#: ../../PyMOTW/shutil/index.rst:212
# 7d0e7e79e1e743ceb421276b2f624325
msgid "The documentation for :func:`copytree()` says it should be considered a sample implementation, rather than a tool. You may want to copy the implementation and make it more robust, or add features like a progress meter."
msgstr ""

#: ../../PyMOTW/shutil/index.rst:256
# 0801268616594c0ea589cc90eed94240
msgid "To remove a directory and its contents, use :func:`rmtree()`. Errors are raised as exceptions by default, but can be ignored if the second argument is true, and a special error handler function can be provided in the third argument."
msgstr ""

#: ../../PyMOTW/shutil/index.rst:299
# 501ba796960a43229402df1f4bbf6138
msgid "To move a file or directory from one place to another, use :func:`move()`. The semantics are similar to those of the Unix command ``mv``. If the source and destination are within the same filesystem, the source is simply renamed.  Otherwise the source is copied to the destination and then the source is removed."
msgstr ""

#: ../../PyMOTW/shutil/index.rst:328
# da0cab696fe049d790fee86ab930a7a4
msgid "`shutil <http://docs.python.org/lib/module-shutil.html>`_"
msgstr ""

#: ../../PyMOTW/shutil/index.rst:328
# 8c077a6131c8482584ebf65910abd75f
msgid "Standard library documentation for this module."
msgstr ""

#: ../../PyMOTW/shutil/index.rst:330
# 0f383a9f08c94fd3b78568fc9a012d5d
msgid ":ref:`article-file-access`"
msgstr ""

#: ../../PyMOTW/shutil/index.rst:331
# e0a6cb633dbc4f9db1cd14347b8ecbd9
msgid "Other utilities for working with files."
msgstr ""

