# SOME DESCRIPTIVE TITLE.
# Copyright (C) Doug Hellmann
# This file is distributed under the same license as the Python Module of the Week package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python Module of the Week 2.1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-10-06 02:58-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../PyMOTW/urllib/index.rst:3
# 194a4079ad9642a38e861b08c0234c19
msgid "urllib -- simple interface for network resource access"
msgstr ""

#: ../../PyMOTW/urllib/index.rst:8
# 99885cb8df824cde87c124d2d8e1df0c
msgid "Accessing remote resources that don't need authentication, cookies, etc."
msgstr ""

#: ../../PyMOTW/urllib/index.rst:9
# b37f7c6f617c43dcb1a2f796ddfaf2db
msgid "1.4 and later"
msgstr ""

#: ../../PyMOTW/urllib/index.rst:11
# a30dd907569e4426ae5cc9e36d08f76f
msgid "The :mod:`urllib` module provides a simple interface for network resource access. Although :mod:`urllib` can be used with gopher and ftp, these examples all use http."
msgstr ""

#: ../../PyMOTW/urllib/index.rst:16
# 71389d29ba31416bab62fc5bbed568e7
msgid "HTTP GET"
msgstr ""

#: ../../PyMOTW/urllib/index.rst:20
# 1c695e8d5444459cbd5eef03f6d303df
msgid "The test server for these examples is in BaseHTTPServer_GET.py, from the PyMOTW examples for :mod:`BaseHTTPServer`. Start the server in one terminal window, then run these examples in another."
msgstr ""

#: ../../PyMOTW/urllib/index.rst:24
# b6abdbe40e9a427a88e05c4fe02888e4
msgid "An HTTP GET operation is the simplest use of urllib. Simply pass the URL to :func:`urlopen()` to get a \"file-like\" handle to the remote data."
msgstr ""

#: ../../PyMOTW/urllib/index.rst:33
# e1a40edd4daa43108b829f2a3946b180
msgid "The example server takes the incoming values and formats a plain text response to send back. The return value from :func:`urlopen()` gives access to the headers from the HTTP server through the :func:`info()` method, and the data for the remote resource via methods like :func:`read()` and :func:`readlines()`."
msgstr ""

#: ../../PyMOTW/urllib/index.rst:67
# 76619446c60f4ae5b5a7ece3da07ba91
msgid "The file-like object is also iterable:"
msgstr ""

#: ../../PyMOTW/urllib/index.rst:74
# 880a9451bc334dbba5c5acaf12daf684
msgid "Since the lines are returned with newlines and carriage returns intact, this example strips them before printing the output."
msgstr ""

#: ../../PyMOTW/urllib/index.rst:96
# e71e32db4c4e4ced9f0b2fa592930aa5
msgid "Encoding Arguments"
msgstr ""

#: ../../PyMOTW/urllib/index.rst:98
# 5dea7613778140c1a87ae9c2ee17a1a1
msgid "Arguments can be passed to the server by encoding them and appending them to the URL."
msgstr ""

#: ../../PyMOTW/urllib/index.rst:105
# e636246b1abe484695b4e7348c141642
msgid "Notice that the query, in the list of client values, contains the encoded query arguments."
msgstr ""

#: ../../PyMOTW/urllib/index.rst:125
# 435695b552504d68954464ba5981d166
msgid "To pass a sequence of values using separate occurrences of the variable in the query string, set *doseq* to True when calling :func:`urlencode()`."
msgstr ""

#: ../../PyMOTW/urllib/index.rst:140
# 8e413542a1c9412c96c5311754da1454
msgid "To decode the query string, see the :class:`FieldStorage` class from the :mod:`cgi` module."
msgstr ""

#: ../../PyMOTW/urllib/index.rst:143
# 45d23c9e6a2d41cb9334cd157f2b30b7
msgid "Special characters within the query arguments that might cause parse problems with the URL on the server side are \"quoted\" when passed to :func:`urlencode()`. To quote them locally to make safe versions of the strings, you can use the :func:`quote()` or :func:`quote_plus()` functions directly."
msgstr ""

#: ../../PyMOTW/urllib/index.rst:153
# d58421f2c11f4c4aab03eeb0a2b4f498
msgid "Notice that :func:`quote_plus()` is more aggressive about the characters it replaces."
msgstr ""

#: ../../PyMOTW/urllib/index.rst:171
# 623801d3da2b4067965c961d4046d1eb
msgid "To reverse the quote operations, use :func:`unquote()` or :func:`unquote_plus()`, as appropriate."
msgstr ""

#: ../../PyMOTW/urllib/index.rst:193
# 1fdf65bcc4bb48c08e3148e81f9029d0
msgid "HTTP POST"
msgstr ""

#: ../../PyMOTW/urllib/index.rst:197
# 03a8658d7f7941dda638ecc759ef4045
msgid "The test server for these examples is in BaseHTTPServer_POST.py, from the PyMOTW examples for the :mod:`BaseHTTPServer`. Start the server in one terminal window, then run these examples in another."
msgstr ""

#: ../../PyMOTW/urllib/index.rst:201
# dc2cad4d67d242bb93737b78c79d1e4f
msgid "To POST data to the remote server, instead of using GET, pass the encoded query arguments as data to :func:`urlopen()` instead of appending them to the URL."
msgstr ""

#: ../../PyMOTW/urllib/index.rst:219
# 045ef4a5d3b441dea759ce61a6b79899
msgid "You can send any byte-string as data, in case the server expects something other than url-encoded form arguments in the posted data."
msgstr ""

#: ../../PyMOTW/urllib/index.rst:223
# abd99b1f435f4a8f899f8232460872a8
msgid "Paths vs. URLs"
msgstr ""

#: ../../PyMOTW/urllib/index.rst:225
# 6d18392c05f64812ba379c0ce7ca5f15
msgid "Some operating systems use different values for separating the components of paths in local files than URLs. To make your code portable, you should use the functions :func:`pathname2url()` and :func:`url2pathname()` to convert back and forth. Since I am working on a Mac, I have to explicitly import the Windows versions of the functions. Using the versions of the functions exported by :mod:`urllib` gives you the correct defaults for your platform, so you do not need to do this."
msgstr ""

#: ../../PyMOTW/urllib/index.rst:239
# 5fd3ed1aa3e744dcba20d015b6beffa7
msgid "There are two Windows examples, with and without the drive letter at the prefix of the path."
msgstr ""

#: ../../PyMOTW/urllib/index.rst:269
# e8e2b9c782094059814440e55d3088ef
msgid "Simple Retrieval with Cache"
msgstr ""

#: ../../PyMOTW/urllib/index.rst:271
# f46744f36a414831998d3962fed2efc7
msgid "Retrieving data is a common operation, and :mod:`urllib` includes the :func:`urlretrieve()` function so you don't have to write your own. :func:`urlretrieve()` takes arguments for the URL, a temporary file to hold the data, a function to report on download progress, and data to pass if the URL refers to a form where data should be POSTed. If no filename is given, :func:`urlretrieve()` creates a temporary file. You can delete the file yourself, or treat the file as a cache and use :func:`urlcleanup()` to remove it."
msgstr ""

#: ../../PyMOTW/urllib/index.rst:280
# 95009eedc55f43139d6c3a46ad8b3c3f
msgid "This example uses GET to retrieve some data from a web server:"
msgstr ""

#: ../../PyMOTW/urllib/index.rst:287
# a83328ad7fca4b098deba0a8c22b372c
msgid "Since the server does not return a ``Content-length`` header, :func:`urlretrieve()` does not know how big the data should be, and passes -1 as the *total_size* argument to :func:`reporthook()`."
msgstr ""

#: ../../PyMOTW/urllib/index.rst:331
# 4ab7f6ec99fb41b1b5b392cb1da2c547
msgid "URLopener"
msgstr ""

#: ../../PyMOTW/urllib/index.rst:333
# 580aed49f62f4d4b9ecd597e236b400a
msgid ":mod:`urllib` provides a :class:`URLopener` base class, and :class:`FancyURLopener` with default handling for the supported protocols. If you find yourself needing to change their behavior, you are probably better off looking at the :mod:`urllib2` module, added in Python 2.1."
msgstr ""

#: ../../PyMOTW/urllib/index.rst:342
# 120cc44ffb274d7da2bf46abaad3f8e7
msgid "`urllib <http://docs.python.org/lib/module-urllib.html>`_"
msgstr ""

#: ../../PyMOTW/urllib/index.rst:342
# 6bb1afb0da314bcdaecc990995ba6c46
msgid "Standard library documentation for this module."
msgstr ""

#: ../../PyMOTW/urllib/index.rst:345
# 42b4128524b8496fbdc10f532f1cfdb5
msgid ":mod:`urllib2`"
msgstr ""

#: ../../PyMOTW/urllib/index.rst:345
# 33eb004fac254d6d8f801a65c39eda8b
msgid "Updated API for working with URL-based services."
msgstr ""

#: ../../PyMOTW/urllib/index.rst:347
# 07ca9bc138b340d1a511e432d947eb79
msgid ":mod:`urlparse`"
msgstr ""

#: ../../PyMOTW/urllib/index.rst:348
# 7194a079931744b5a3f78fdec3001dba
msgid "Parse URL values to access their components."
msgstr ""

