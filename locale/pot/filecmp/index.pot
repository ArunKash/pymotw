# SOME DESCRIPTIVE TITLE.
# Copyright (C) Doug Hellmann
# This file is distributed under the same license as the Python Module of the Week package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python Module of the Week 2.1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-10-06 02:58-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../PyMOTW/filecmp/index.rst:3
# ad1a38a18942443f8076f7b29ab209ca
msgid "filecmp -- Compare files"
msgstr ""

#: ../../PyMOTW/filecmp/index.rst:8
# 5c975b3438544303bc86cc21f7900b2f
msgid "Compare files and directories on the filesystem."
msgstr ""

#: ../../PyMOTW/filecmp/index.rst:9
# 2aa98c159e1840bbbb10730430662ffd
msgid "2.1 and later"
msgstr ""

#: ../../PyMOTW/filecmp/index.rst:12
# cf5a05c4ea274f6fa82611e108208c34
msgid "Example Data"
msgstr ""

#: ../../PyMOTW/filecmp/index.rst:14
# 1173bb9b154d4d1a870539eac5801a19
msgid "The examples in the discussion below use a set of test files created by ``filecmp_mkexamples.py``."
msgstr ""

#: ../../PyMOTW/filecmp/index.rst:63
# 799e6fc906d641b8a6a182886b9e349b
msgid "The same directory structure is repeated one time under the \"common_dir\" directories to give interesting recursive comparison options."
msgstr ""

#: ../../PyMOTW/filecmp/index.rst:67
# 3c56b197b2c244c3a8acad4846f119b8
msgid "Comparing Files"
msgstr ""

#: ../../PyMOTW/filecmp/index.rst:69
# 41df24996d7c4a88a476ecaf2c5d5b8b
msgid "The filecmp module includes functions and a class for comparing files and directories on the filesystem. If you need to compare two files, use the cmp() function."
msgstr ""

#: ../../PyMOTW/filecmp/index.rst:77
# 01b54026897c40fa90201f61473b8743
msgid "By default, cmp() looks only at the information available from os.stat(). The shallow argument tells cmp() whether to look at the contents of the file, as well. The default is to perform a shallow comparison, without looking inside the files. Notice that files of the same size created at the same time seem to be the same if their contents are not compared."
msgstr ""

#: ../../PyMOTW/filecmp/index.rst:98
# 9c9a6ed1ccef474fa7ca9ee12460f8f3
msgid "To compare a set of files in two directories without recursing, use filecmp.cmpfiles(). The arguments are the names of the directories and a list of files to be checked in the two locations. The list of common files should contain only filenames (directories always result in a mismatch) and the files must be present in both locations. The code below shows a simple way to build the common list. If you have a shorter formula, post it in the comments. The comparison also takes the shallow flag, just as with cmp()."
msgstr ""

#: ../../PyMOTW/filecmp/index.rst:110
# 452f57643b88461c81ed1dcbc5c7c2f6
msgid "cmpfiles() returns three lists of filenames for files that match, files that do not match, and files that could not be compared (due to permission problems or for any other reason)."
msgstr ""

#: ../../PyMOTW/filecmp/index.rst:131
# fc4ca3f3b5fb42759adaae3cf6b54fe4
msgid "Using dircmp"
msgstr ""

#: ../../PyMOTW/filecmp/index.rst:133
# 11c560eddcf8460f9f3d75cdd9d82c15
msgid "The functions described above are suitable for relatively simple comparisons, but for recursive comparison of large directory trees or for more complete analysis, the dircmp class is more useful. In its simplest use case, you can print a report comparing two directories with the report() method:"
msgstr ""

#: ../../PyMOTW/filecmp/index.rst:142
# 47b8dede689948f58c1cdd64b61da471
msgid "The output is a plain-text report showing the results of just the contents of the directories given, without recursing. In this case, the file \"not_the_same\" is thought to be the same because the contents are not being compared. There is no way to have dircmp compare the contents of files like cmp() can."
msgstr ""

#: ../../PyMOTW/filecmp/index.rst:165
# 378c883929384deda46451abc3cf6adf
msgid "For more detail, and a recursive comparison, use report_full_closure():"
msgstr ""

#: ../../PyMOTW/filecmp/index.rst:171
# cfb84226cc804a5ebcfa4742f174041b
msgid "The output includes comparisons of all parallel subdirectories."
msgstr ""

#: ../../PyMOTW/filecmp/index.rst:212
# b70682309e6f449bb07028069e644be8
msgid "Using differences in your program"
msgstr ""

#: ../../PyMOTW/filecmp/index.rst:214
# 570a20eace444eba9d8647198fd049d2
msgid "Besides producing printed reports, dircmp calculates useful lists of files you can use in your programs directly. Each of the following attributes is calculated only when requested, so instantiating a dircmp does not incur a lot of extra overhead."
msgstr ""

#: ../../PyMOTW/filecmp/index.rst:219
# bb85b6f72dde4882af279cd03072cc5a
msgid "The files and subdirectories contained in the directories being compared are listed in left_list and right_list:"
msgstr ""

#: ../../PyMOTW/filecmp/index.rst:252
# fad4ed660bd046b58e4ffe032453bf14
msgid "The inputs can be filtered by passing a list of names to ignore to the constructor. By default the names RCS, CVS, and tags are ignored."
msgstr ""

#: ../../PyMOTW/filecmp/index.rst:259
# 099feb9141e44ee290a7b7faceb8b728
msgid "In this case, the \"common_file\" is left out of the list of files to be compared."
msgstr ""

#: ../../PyMOTW/filecmp/index.rst:286
# d2899aecd40c44dc861a3439d671b221
msgid "The set of files common to both input directories is maintained in common, and the files unique to each directory are listed in left_only, and right_only."
msgstr ""

#: ../../PyMOTW/filecmp/index.rst:312
# 4135f2c85b9f4f459c99ae07ea3b5ab6
msgid "The common members can be further broken down into files, directories and \"funny\" items (anything that has a different type in the two directories or where there is an error from os.stat())."
msgstr ""

#: ../../PyMOTW/filecmp/index.rst:320
# 88f59080544944d9b102d2a2beaef77e
msgid "In the example data, the item named \"file_in_dir1\" is a file in one directory and a subdirectory in the other, so it shows up in the \"funny\" list."
msgstr ""

#: ../../PyMOTW/filecmp/index.rst:345
# 31216ab461eb4d49860601938499d399
msgid "The differences between files are broken down similarly:"
msgstr ""

#: ../../PyMOTW/filecmp/index.rst:351
# eb1acfbb3db8475a911fa18b8b45b1a7
msgid "Remember, the file \"not_the_same\" is only being compared via os.stat, and the contents are not examined."
msgstr ""

#: ../../PyMOTW/filecmp/index.rst:367
# f51072b0ea23426494eccc82ddda6792
msgid "Finally, the subdirectories are also mapped to new dircmp objects in the attribute subdirs to allow easy recursive comparison."
msgstr ""

#: ../../PyMOTW/filecmp/index.rst:383
# d251c2d318b948069251b8bf2b802e24
msgid "`filecmp <http://docs.python.org/library/filecmp.html>`_"
msgstr ""

#: ../../PyMOTW/filecmp/index.rst:383
# a0d42246c5f64de38381643d9f18e780
msgid "The standard library documentation for this module."
msgstr ""

#: ../../PyMOTW/filecmp/index.rst:386
# e80f7e1b3c2c4fe1a68de7fafd6502cb
msgid ":ref:`os-directories` from :mod:`os`"
msgstr ""

#: ../../PyMOTW/filecmp/index.rst:386
# 444f91e932254128baec24ccfc988a2b
msgid "Listing the contents of a directory."
msgstr ""

#: ../../PyMOTW/filecmp/index.rst:388
# 4ca0ccb84b1346a8bc5abeaeca05ca90
msgid ":mod:`difflib`"
msgstr ""

#: ../../PyMOTW/filecmp/index.rst:389
# ba7bae78c654497c91037c592653ab2c
msgid "Computing the differences between two sequences."
msgstr ""

