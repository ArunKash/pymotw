# SOME DESCRIPTIVE TITLE.
# Copyright (C) Doug Hellmann
# This file is distributed under the same license as the Python Module of the Week package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python Module of the Week 2.1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-10-06 02:58-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../PyMOTW/imaplib/index.rst:5
# 0c5feca2205b40ac9fea1c4d33b32b63
msgid "imaplib - IMAP4 client library"
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:10
# 176920e7667d4615a7ffb24a21f24983
msgid "Client library for IMAP4 communication."
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:11
# 1649e364864441eca64e2b8aee0ad4fe
msgid "1.5.2 and later"
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:13
# 023c163fc7e14b6aa0a45a81cfd82a90
msgid ":mod:`imaplib` implements a client for communicating with Internet Message Access Protocol (IMAP) version 4 servers.  The IMAP protocol defines a set of *commands* sent to the server and the responses delivered back to the client.  Most of the commands are available as methods of the :class:`IMAP4` object used to communicate with the server."
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:20
# 9e60af9771f64be7a675f9ad5b2e478b
msgid "These examples discuss part of the IMAP protocol, but are by no means complete.  Refer to :rfc:`3501` for complete details."
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:25
# 6a2b361d4bb3455fab4184caea5c7413
msgid "Variations"
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:27
# 3c2e3996f59a412daf2e8fa00d725c23
msgid "There are 3 client classes for communicating with servers using various mechanisms.  The first, :class:`IMAP4`, uses clear text sockets; :class:`IMAP4_SSL` uses encrypted communication over SSL sockets; and :class:`IMAP4_stream` uses the standard input and standard output of an external command.  All of the examples below will use :class:`IMAP4_SSL`."
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:36
# 259a85223368468fa4a13f05bce1d052
msgid "Connecting to a Server"
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:38
# d5624a89651a4ca69416a25d1bccbbfd
msgid "There are two steps for establishing a connection with an IMAP server. First, set up the socket connection itself.  Second, authenticate as a user with an account on the server.  The following example code will read server and user information from a configuration file."
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:44
# 50bb205a565a434294f2154097a690f9
msgid "You probably do not want to store email passwords in clear text, but handling encryption will distract from the rest of the examples."
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:51
# f01f5268cf0a4a71b717eaa96278000f
msgid "When run, :func:`open_connection()` reads the configuration information from a file in your home directory, then opens the :class:`IMAP4_SSL` connection and authenticates."
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:63
# fb94bb10f7924d8ba5799343807c94d0
msgid "The other examples below will reuse this module, to avoid duplicating the code."
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:66
# c5ce92c8d98940a1a58ab94c58ed7c5f
msgid "Authentication Failure"
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:68
# d20d865c0e7a4e42a8ab9b8b07ff816a
msgid "If the connection is established but authentication fails, an exception is raised."
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:89
# 72ff12b0c8a04bdca772b261f83904fd
msgid "Example Configuration"
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:91
# 70fe0118bcf543529a8ff62faa3b9be1
msgid "The example account has 4 mailboxes, ``INBOX``, ``Apple Mail To Do``, ``Archive``, and ``2008`` (a sub-folder of ``Archive``).  The mailbox hierarchy looks like:"
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:95
# 56c72f2471204a9ca4ec65aa4e9e1bf1
msgid "INBOX"
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:96
# 3c640f69099d48f09a68dd791963a144
msgid "Apple Mail To Do"
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:97
# a605dc3091114b988a758eca6ce01810
msgid "Archive"
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:99
# 4676ba0223c24d03bd29345bb31cef24
msgid "2008"
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:101
# 89f2cd814af14539a00dce458120058b
msgid "There is one unread message in the ``INBOX`` folder, and one read message in ``Archive/2008``."
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:106
# 20826d9d0fe044aaa1a4776058fde301
msgid "Listing Mailboxes"
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:108
# 4a2e558ba3ac40b0a6c89aee20e5f481
msgid "To retrieve the mailboxes available for an account, use the :meth:`list()` method."
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:115
# 0c9ff5d32f264947a80f6a3ffe1b8445
msgid "The return value is a tuple with a response code and the data returned by the server.  The response code is ``OK``, unless there has been an error.  The data for :meth:`list()` is a sequence of strings containing *flags*, the *hierarchy delimiter*, and *mailbox name* for each mailbox."
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:131
# 2e953117501540908130108c3d9637d9
msgid "Each response string can be split into 3 parts using :mod:`re` or :mod:`csv` (see `IMAP Backup Script`_ for an example using :mod:`csv`)."
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:139
# 3e5e87113f4445b4948443c04b68a395
msgid "Notice that the server quotes the mailbox name if it includes spaces, but we need to strip those quotes to use the mailbox name in other calls back to the server later."
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:156
# c7f5b82cd1ef4e269ab2f65f5c39b778
msgid ":meth:`list()` takes arguments to let you ask for mailboxes in part of the hierarchy.  For example, to list sub-folders of ``Archive``, you can pass a value as the *directory* argument:"
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:164
# a4a934c2e33340b8affa04c2dc2cb526
msgid "Only the single subfolder is returned:"
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:172
# a7143a9978b343cfbb7ffa79d621a82e
msgid "Alternately, to list folders matching a pattern you can pass the *pattern* argument:"
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:179
# de841af8e95f4b788606961477455de7
msgid "In this case, both ``Archive`` and ``Archive.2008`` are included in the response."
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:191
# b89ab97d0a9841f28dabd7526b584b5a
msgid "Mailbox Status"
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:193
# 9d3d74c8702246e7a26f0c6b2a4a4b2b
msgid "Use :meth:`status()` to ask for aggregated information about the contents.  The standard defines these *status conditions*:"
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:197
# 9ea86b1f59174d62ab4d57b1db58ab9f
msgid "MESSAGES"
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:197
# 3ab1ce5e155c46329d99b9b10e427d5f
msgid "The number of messages in the mailbox."
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:200
# bcf80140b8ab482e8bc57cfaf5aad776
msgid "RECENT"
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:200
# 521c32e874e94fa7b769958656602593
msgid "The number of messages with the \\Recent flag set."
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:203
# ef4ea59df2fc41b3bcf385fd27d4b9ac
msgid "UIDNEXT"
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:203
# c47177b7433741f285b7e28410fc11cc
msgid "The next unique identifier value of the mailbox."
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:206
# a1ad5ee2196a4252b2e3abc1645ef717
msgid "UIDVALIDITY"
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:206
# c983b09ce4ae4b60bd3d03acaf9ae27b
msgid "The unique identifier validity value of the mailbox."
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:209
# f968479464454c9d95530244add72dcf
msgid "UNSEEN"
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:209
# 39fe487dbe754de38c10c455eac695b5
msgid "The number of messages which do not have the \\Seen flag set."
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:211
# 3abaa35984a2487094196c1fa3f00de8
msgid "The status conditions must be formatted as a space separated string enclosed in parentheses, the encoding for a \"list\" in the IMAP4 specification."
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:219
# 4b5b7cc07c984d71868bce369291f26f
msgid "The return value is the usual tuple containing a response code and a list of information from the server.  In this case, the list contains a single string formatted with the name of the mailbox in quotes, then the status conditions and values in parentheses."
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:234
# 6147c8e3cf08497a8b6126036618a096
msgid "Selecting a Mailbox"
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:236
# 1df0828301994266b8efb50a69a9834a
msgid "The basic mode of operation, once the client is authenticated, is to *select* a mailbox and then interrogate the server regarding messages in the mailbox.  The connection is stateful, so once a mailbox is selected all commands operate on messages in that mailbox until a new mailbox is selected."
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:246
# 5ffb278edff7486f9d3b9feaafe55a12
msgid "The response data contains the total number of messages in the mailbox."
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:255
# 594a16052d264b159403f094f338b04f
msgid "If an invalid mailbox is specified, the response code is ``NO``."
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:261
# 99859c24eaa3477f895d8ae8fa484024
msgid "The data contains an error message describing the problem."
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:270
# 362e2b9fe5e34dc5b242a152f332e938
msgid "Searching for Messages"
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:272
# a87001ab079f455abdc43c59ebf9ae08
msgid "Once the mailbox is selected, use :meth:`search()` to retrieve the ids of messages in the mailbox."
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:279
# 51cf2da8e9244877b8dece3596fc3468
msgid "Message ids are assigned by the server, and are implementation dependent.  The IMAP4 protocol makes a distinction between sequential ids for messages at a given point in time during a transaction and UID identifiers for messages, but not all servers seem to bother."
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:292
# 1beada031704497b83b15eb27c4bd6b8
msgid "In this case, ``INBOX`` and ``Archive.2008`` each have a diffrerent message with id ``1``.  The other mailboxes are empty."
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:297
# a19ed9091e844e7fa71d9aa2f370584d
msgid "Search Criteria"
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:299
# 987218a7c4a44c868842709157eb8247
msgid "A variety of other search criteria can be used, including looking at dates for the message, flags, and other headers.  Refer to section 6.4.4. of :rfc:`3501` for complete details."
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:303
# b6cd93825f2f406a80d63a078beb509d
msgid "As one example, to look for messages with ``'test message 2'`` in the subject, the search criteria could be constructed as::"
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:308
# ba29082c16424c429aa65d41866c2a5b
msgid "This example finds all messages with the title \"test message 2\" in all mailboxes:"
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:315
# fdc19cf8e9ca4678ad213cd12f9ac2b0
msgid "There is only one such message in the account, and it is in the ``INBOX``."
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:326
# 93442a2b0f6744da95dba5363994cef3
msgid "Search criteria can also be combined."
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:332
# 50f328a153174237a2514a57f4333578
msgid "The combination is treated as a logical *and* operation."
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:344
# ae6fa0d6d68e49bdbabf9321a32ac167
msgid "Fetching Messages"
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:346
# 336a1d93263c4cbab9dd9bd33bbee748
msgid "The identifiers returned by :meth:`search()` are used to retrieve the contents, or partial contents, of messages for further processing via :meth:`fetch()`.  :meth:`fetch()` takes 2 arguments, the message ids to fetch and the portion(s) of the message to retrieve."
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:351
# be9483b4d6134ea690e3cf23abe7c2aa
msgid "The *message_ids* argument is a comma separated list of ids (``\"1\"``, ``\"1,2\"``) or id ranges (``1:2``).  The *message_parts* argument is an IMAP list of message segment names.  As with search criteria for :meth:`search()`, the IMAP protocol specifies named message segments so clients can efficiently retrieve only the parts of the message they actually need.  For example, to print the headers of the messages in a mailbox, we could :meth:`fetch()` the headers using ``BODY.PEEK[HEADER]``."
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:362
# e360eb166dab4e8690b6147716271411
msgid "Another way to fetch the headers would be simply ``BODY[HEADERS]``, but that form implicitly marks the message as read, which is undesirable in many cases."
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:370
# fc9d3a9a8e4345d1884e14e0aca7de3b
msgid "The return value of :meth:`fetch()` has been partially parsed so it is somewhat harder to work with than the return value of :meth:`list()`. If we turn on debugging, we can see the complete interaction between the client and server to understand why this is so."
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:411
# 9a53624b9d6a414f94e11478e60e88bb
msgid "The response from the ``FETCH`` command starts with the flags, then indicates that there are 595 bytes of header data.  The client contructs a tuple with the response for the message, and then closes the sequence with a single string containing the ``)`` the server sends at the end of the fetch response.  Because of this formatting, it may be easier to fetch different pieces of information separately, or to recombine the response and parse it yourself."
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:423
# 51774e7ec7984bca951139251e97bc20
msgid "Fetching values separately has the added benefit of making it easy to use :func:`ParseFlags()` to parse the flags from the response."
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:454
# d19062b1c0374f13876d9889514d42e8
msgid "Whole Messages"
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:456
# 8dcd893773f84aaea0ae93caddec6a89
msgid "As illustrated above, the client can ask the server for individual parts of the message separately.  It is also possible to retrieve the entire message as an :rfc:`2822` formatted mail message and parse it with classes from the :mod:`email` module."
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:465
# 2184e50a51f448e1ae1cef03fc018cc1
msgid "The parser in the :mod:`email` module make it very easy to access and manipulate messages.  This example prints just a few of the headers for each message."
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:478
# e62c05e1b5d1408ea7c543af5a25b64e
msgid "Uploading Messages"
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:480
# 713bb5f97fb445189967e4b183d06544
msgid "To add a new message to a mailbox, pass it to the :meth:`append()` method."
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:535
# b616e0bb94c44de08bc2064aa1dc3078
msgid "Moving and Copying Messages"
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:537
# e35a429a93724411bd362bbe275e325d
msgid "Once a message is on the server, it can be moved or copied without downloading it using :meth:`move()` or :meth:`copy()`.  These methods operate on message id ranges, just as :meth:`fetch()` does."
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:541
# c6360a3739514baeaa34bf6147f9edb1
msgid "This example script creates a new mailbox under ``Archive`` and copies the read messages from ``INBOX`` into it."
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:556
# b2f16b045f8e4d82a1bcc4926595807a
msgid "Running the same script again shows the importance to checking return codes.  Instead of raising an exception, the call to :meth:`create()` to make the new mailbox reports that the mailbox already exists."
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:569
# cf3b26718ea84de685e003c3804f68f2
msgid "Deleting Messages"
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:571
# ed2a3a97e710463194233526e556f981
msgid "Although most modern mail clients use a \"Trash folder\" model for working with deleted messages, the messages are not usually moved into an actual folder.  Instead, their flags are updated to add ``\\Deleted``.  *Emptying the trash* is implemented through an ``EXPUNGE`` command.  This example script finds the archived messages with \"Lorem ipsum\" in the subject, sets the deleted flag, then shows that the messages are still present in the folder by querying the server again."
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:584
# 317d526ce76f4554b839682878900191
msgid "This example explicitly calls :meth:`expunge()` to remove the messages, but calling :meth:`close()` has the same effect.  The difference is the client is not notified about the deletions when you call :meth:`close()`."
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:605
# be7171da076346cd85a803a7549a4118
msgid "`imaplib <http://docs.python.org/library/imaplib.html>`_"
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:605
# ef1222808f594fea9a522be618745ddd
msgid "The standard library documentation for this module."
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:608
# 4c1c0a16ed544641b58ada629c9f4f8a
msgid "`What is IMAP? <http://www.imap.org/about/whatisIMAP.html>`_"
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:608
# 65a4fd77098543f9b9ce1cf2e0269d51
msgid "imap.org description of the IMAP protocol"
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:611
# 4fd227398b044c6ba1e39b7f2024e889
msgid "`University of Washington IMAP Information Center <http://www.washington.edu/imap/>`_"
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:611
# 5b574e2350a54a8fa2bc433ddec6b7a2
msgid "Good resource for IMAP information, along with source code."
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:614
# dc838297b589477dbdd1ecb53b1c16b7
msgid ":rfc:`3501`"
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:614
# 7b9a56ba71f54ac5940cb0f05b825c94
msgid "Internet Message Access Protocol"
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:617
# 70a339206a8841e6b61cdaabe8370510
msgid ":rfc:`2822`"
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:617
# a860d8857a014a549f119124cba401d8
msgid "Internet Message Format"
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:622
# 8fa1f7b56996453c9554fbda60de6c0f
msgid "`IMAP Backup Script`_"
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:620
# f2149b022abf4b399b331a37c163ebfe
msgid "A script to backup email from an IMAP server."
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:625
# 3db75c00763544bfa3482e8448686c86
msgid ":mod:`rfc822`"
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:625
# 94c7e1a04d32435a884d171845504712
msgid "The :mod:`rfc822` module includes an :rfc:`822` / :rfc:`2822` parser"
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:628
# f07a86043fc84b6bad6476dea9bc485b
msgid ":mod:`email`"
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:628
# 2c5330bedf834f35a68880cd081ab917
msgid "The :mod:`email` module for parsing email messages."
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:631
# 261e7e9deec04613bdfa7f089c7b41ba
msgid ":mod:`mailbox`"
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:631
# ac141240d57d48b786bcd77780b8819c
msgid "Local mailbox parser."
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:634
# f5bdcbbdb8884bf8b8089687a5e82940
msgid ":mod:`ConfigParser`"
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:634
# d583387f11ba4cfc953beea1a1972993
msgid "Read and write configuration files."
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:636
# 21c8a46f6bf44aa493ae8c33744db55d
msgid "`IMAPClient <http://freshfoo.com/wiki/CodeIndex>`_"
msgstr ""

#: ../../PyMOTW/imaplib/index.rst:637
# 67445ed886ef4027888c543be5d232a8
msgid "A higher-level client for talking to IMAP servers, written by Menno Smits."
msgstr ""

