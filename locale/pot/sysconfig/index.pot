# SOME DESCRIPTIVE TITLE.
# Copyright (C) Doug Hellmann
# This file is distributed under the same license as the Python Module of the Week package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python Module of the Week 2.1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-10-06 02:58-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../PyMOTW/sysconfig/index.rst:3
# e8f93cc4a0ca4fc9893768782e204ba2
msgid "sysconfig -- Interpreter Compile-time Configuration"
msgstr ""

#: ../../PyMOTW/sysconfig/index.rst:8
# 7d6ddb055bc6477ab5b816e3472d6f1e
msgid "Access the configuration settings used to build Python."
msgstr ""

#: ../../PyMOTW/sysconfig/index.rst:9
# fe2b9d2c0b994af0bb44e2c53c691df4
msgid "2.7 and later"
msgstr ""

#: ../../PyMOTW/sysconfig/index.rst:11
# 182b729d1f704678a04b0b6bccf7ac4b
msgid "In Python 2.7 :mod:`sysconfig` has been extracted from :mod:`distutils` to become a stand-alone module.  It includes functions for determining the settings used to compile and install the current interpreter."
msgstr ""

#: ../../PyMOTW/sysconfig/index.rst:17
# b927d5f709e24fb582d6ad6cfa3183b9
msgid "Configuration Variables"
msgstr ""

#: ../../PyMOTW/sysconfig/index.rst:19
# 7e8c307fc3f14a16bab2e57bc89e7a82
msgid "You can access the build-time configuration settings through two functions.  :func:`get_config_vars` returns a dictionary mapping the configuration variable names to values."
msgstr ""

#: ../../PyMOTW/sysconfig/index.rst:27
# 61b6f5f63e024843ac26d256db45355a
msgid "The level of detail available through the :mod:`sysconfig` API depends on the platform where your program is running.  On POSIX systems such as Linux and OS X, the ``Makefile`` used to build the interpreter and ``config.h`` header file generated for the build are parsed and all of the variables found within are available.  On non-POSIX-compliant systems such as Windows, the settings are limited to a few paths, filename extensions, and version details."
msgstr ""

#: ../../PyMOTW/sysconfig/index.rst:69
# 0b558405e9fe44f183b0d0b98165f7d5
msgid "If you pass variable names to :func:`get_config_vars`, the return value is a :class:`list` created by appending all of the values for those variables together."
msgstr ""

#: ../../PyMOTW/sysconfig/index.rst:77
# 45d85aefcd864598bc427271ecf602f3
msgid "This example builds a list of all of the installation base directories where modules can be found on the current system."
msgstr ""

#: ../../PyMOTW/sysconfig/index.rst:95
# 3a044586ab9e4a079ab1ea7d0eb38f7d
msgid "When you only need a single configuration value, use :func:`get_config_var` to retrieve it."
msgstr ""

#: ../../PyMOTW/sysconfig/index.rst:102
# feb27cdc315440d8883a52d0496e1153
msgid "If the variable is not found, :func:`get_config_var` returns ``None`` instead of raising an exception."
msgstr ""

#: ../../PyMOTW/sysconfig/index.rst:120
# d3b01376181047b9b2356bce98206cc7
msgid "Installation Paths"
msgstr ""

#: ../../PyMOTW/sysconfig/index.rst:122
# 0e59d4a148b54c8397a35c536b35525c
msgid ":mod:`sysconfig` is primarily meant to be used by installation and packaging tools.  As a result, while it provides access to general configuration settings such as the interpreter version, it is primarily focused on the information needed to locate parts of the Python distribution currently installed on a system.  The locations used by for installing a package depend on the *scheme* used."
msgstr ""

#: ../../PyMOTW/sysconfig/index.rst:129
# 2a126a4112a24216b7d490f31c6ac572
msgid "A scheme is a set of platform-specific default directories organized based on the platform's packaging standards and guidelines.  There are different schemes for installing into a site-wide location or a private directory owned by the user.  The full set of schemes can be accessed with :func:`get_scheme_names`."
msgstr ""

#: ../../PyMOTW/sysconfig/index.rst:139
# 9b12e625985b4b7f821f6976fcaf495f
msgid "There is no concept of a \"current scheme\" per se.  The default scheme depends on the platform, and the actual scheme used depends on options given to the installation program.  If the current system is running a POSIX-compliant operating system, the default is ``posix_prefix``. Otherwise the default is ``os.name``."
msgstr ""

#: ../../PyMOTW/sysconfig/index.rst:166
# 03ee0eaa49dd484a864ccb7426f57f39
msgid "Each scheme defines a set of paths used for installing packages.  For a list of the path names, use :func:`get_path_names`."
msgstr ""

#: ../../PyMOTW/sysconfig/index.rst:173
# 1156713d6a534c789b3325a231ab77dc
msgid "Some of the paths may be the same for a given scheme, but installers should not make any assumptions about what the actual paths are.  Each name has a particular semantic meaning, so the correct name should be used to find the path for a given file during installation."
msgstr ""

#: ../../PyMOTW/sysconfig/index.rst:179
# b3c0fcf761a241eeb3eedd6966851126
msgid "Name"
msgstr ""

#: ../../PyMOTW/sysconfig/index.rst:179
# 704fdf745def4f8197a582cb2882b276
msgid "Description"
msgstr ""

#: ../../PyMOTW/sysconfig/index.rst:181
# fc62ee9a6bb540cfb547ab26d2c4d04d
msgid "stdlib"
msgstr ""

#: ../../PyMOTW/sysconfig/index.rst:181
# c3ce8718b735491da52a32a1e08f0569
msgid "Standard Python library files, not platform-specific"
msgstr ""

#: ../../PyMOTW/sysconfig/index.rst:182
# 32bf1f45a7dc4cfb8b37302986886bf2
msgid "platstdlib"
msgstr ""

#: ../../PyMOTW/sysconfig/index.rst:182
# 947e18d0b9ab46c1bab8a736b304b16b
msgid "Standard Python library files, platform-specific"
msgstr ""

#: ../../PyMOTW/sysconfig/index.rst:183
# 6bca328c52a34be386c0cbb9a767f840
msgid "platlib"
msgstr ""

#: ../../PyMOTW/sysconfig/index.rst:183
# aaafc8627578408caad2fdd1d8ed6688
msgid "Site-specific, platform-specific files"
msgstr ""

#: ../../PyMOTW/sysconfig/index.rst:184
# aae721a4df194fb4a5e530a9a3b8f25a
msgid "purelib"
msgstr ""

#: ../../PyMOTW/sysconfig/index.rst:184
# 837d4482e58241bd80203191f24f3062
msgid "Site-specific, non-platform-specific files"
msgstr ""

#: ../../PyMOTW/sysconfig/index.rst:185
# dc7b6d7809aa4680b092700cdf25466c
msgid "include"
msgstr ""

#: ../../PyMOTW/sysconfig/index.rst:185
# dee1af8fd8a842e3949bc2660289fa7d
msgid "Header files, not platform-specific"
msgstr ""

#: ../../PyMOTW/sysconfig/index.rst:186
# 1261ff39615e418ca478f0329486ee4b
msgid "platinclude"
msgstr ""

#: ../../PyMOTW/sysconfig/index.rst:186
# 73567b1617fc42b794caee8d23c46fba
msgid "Header files, platform-specific"
msgstr ""

#: ../../PyMOTW/sysconfig/index.rst:187
# a4ea28e472c44f6f82ba9ce937c74ab8
msgid "scripts"
msgstr ""

#: ../../PyMOTW/sysconfig/index.rst:187
# 8bd647013a9b4e6bbc21b85221c044d8
msgid "Executable script files"
msgstr ""

#: ../../PyMOTW/sysconfig/index.rst:188
# a65e602f0cdd46f2844510324c5ce852
msgid "data"
msgstr ""

#: ../../PyMOTW/sysconfig/index.rst:188
# 32f861592a9e49aea99e9c64c08da289
msgid "Data files"
msgstr ""

#: ../../PyMOTW/sysconfig/index.rst:209
# 3aa913b1ba364185894e76713c2d8480
msgid "Use :func:`get_paths` to retrieve the actual directories associated with a scheme."
msgstr ""

#: ../../PyMOTW/sysconfig/index.rst:216
# 4c6cba9aded34d039335a56cbaf74eef
msgid "This example shows the difference between the system-wide paths uses for ``posix_prefix`` and the user-specific values for ``posix_user``."
msgstr ""

#: ../../PyMOTW/sysconfig/index.rst:270
# 4f989242ce264763abc74b42fa239d66
msgid "For an individual path, call :func:`get_path`."
msgstr ""

#: ../../PyMOTW/sysconfig/index.rst:276
# 0684e5d3b6eb4729ae3b34480fdc0916
msgid "Using :func:`get_path` is equivalent to saving the value of :func:`get_paths` and looking up the individual key in the dictionary. If you need several paths, :func:`get_paths` is more efficient because it does not recompute all of the paths each time."
msgstr ""

#: ../../PyMOTW/sysconfig/index.rst:301
# 54bbb2eae21e4d708cea61e913da43ea
msgid "Python Version and Platform"
msgstr ""

#: ../../PyMOTW/sysconfig/index.rst:303
# 2ed87c1593e2450395c9e0443c6e2ab7
msgid "While :mod:`sys` includes some basic platform identification (see :ref:`sys-build-time-info`), it is not specific enough to be used for installing binary packages because ``sys.platform`` does not always include information about hardware architecture, bit-ness, or other values that effect the compatibility of binary libraries.  For a more precise platform specifier, use :func:`get_platform`."
msgstr ""

#: ../../PyMOTW/sysconfig/index.rst:314
# 1247b28b2beb4fd1af78dbb7fc1d4a88
msgid "Although this sample output was prepared on an OS X 10.6 system, the interpreter is compiled for 10.5 compatibility, so that is the version number included in the platform string."
msgstr ""

#: ../../PyMOTW/sysconfig/index.rst:330
# ff73f55000fb4e868329ad7ad1bf3688
msgid "As a convenience, the interpreter version from ``sys.version_info`` is also available through :func:`get_python_version` in :mod:`sysconfig`."
msgstr ""

#: ../../PyMOTW/sysconfig/index.rst:337
# a7293c41b5564249a3804530a5ac07e6
msgid ":func:`get_python_version` returns a string suitable for use when building a version-specific path."
msgstr ""

#: ../../PyMOTW/sysconfig/index.rst:362
# e49498c133f849f9b76490acaee814bf
msgid "`sysconfig <http://docs.python.org/library/sysconfig.html>`_"
msgstr ""

#: ../../PyMOTW/sysconfig/index.rst:362
# 2b94e331c8f34528ad59840c65c1eb8a
msgid "The standard library documentation for this module."
msgstr ""

#: ../../PyMOTW/sysconfig/index.rst:365
# aa2001f888894c53b9f6e71eaf3f25dd
msgid ":mod:`distutils`"
msgstr ""

#: ../../PyMOTW/sysconfig/index.rst:365
# 3a457e3fd92c45369e36749074d36933
msgid ":mod:`sysconfig` used to be part of the :mod:`distutils` package."
msgstr ""

#: ../../PyMOTW/sysconfig/index.rst:368
# e90a3679644c4c7cabda4b52867e5ed7
msgid "`distutils2 <http://hg.python.org/distutils2/>`_"
msgstr ""

#: ../../PyMOTW/sysconfig/index.rst:368
# 3e1049ce6d3042f0aa21b22fc02aa71c
msgid "Updates to :mod:`distutils`, managed by Tarek Ziadé."
msgstr ""

#: ../../PyMOTW/sysconfig/index.rst:372
# e62951bfdeb54fb9a4ba43efd8503975
msgid ":mod:`site`"
msgstr ""

#: ../../PyMOTW/sysconfig/index.rst:371
# 30b899e59c784547b9d86bb9e2127044
msgid "The :mod:`site` module describes the paths searched when importing in more detail."
msgstr ""

#: ../../PyMOTW/sysconfig/index.rst:375
# 31c9647958c84886a53f33842edb1c70
msgid ":mod:`os`"
msgstr ""

#: ../../PyMOTW/sysconfig/index.rst:375
# c2ae5d9353b64b739e525496026b97bd
msgid "Includes ``os.name``, the name of the current operating system."
msgstr ""

#: ../../PyMOTW/sysconfig/index.rst:377
# ea4394bad94845468da39dda6980fb66
msgid ":mod:`sys`"
msgstr ""

#: ../../PyMOTW/sysconfig/index.rst:378
# 4c2cde4fceea4a09baaff567b2492070
msgid "Includes other build-time information such as the platform."
msgstr ""

