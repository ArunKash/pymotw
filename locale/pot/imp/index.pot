# SOME DESCRIPTIVE TITLE.
# Copyright (C) Doug Hellmann
# This file is distributed under the same license as the Python Module of the Week package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python Module of the Week 2.1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-10-06 02:58-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../PyMOTW/imp/index.rst:3
# c58ad90dda9743d09d96f9b765628567
msgid "imp -- Interface to module import mechanism."
msgstr ""

#: ../../PyMOTW/imp/index.rst:9
# 9d59dad3aae1450b95b933b4e834b073
msgid "The imp module exposes the implementation of Python's import statement."
msgstr ""

#: ../../PyMOTW/imp/index.rst:10
# b8b50e50d0fe464aa20b58413bee3114
msgid "At least 2.2.1"
msgstr ""

#: ../../PyMOTW/imp/index.rst:12
# cdf764baf2ce4d10a114429b71de39f1
msgid "The imp module includes functions that expose part of the underlying implementation of Python's import mechanism for loading code in packages and modules. It is one access point to importing modules dynamically, and useful in some cases where you don't know the name of the module you need to import when you write your code (e.g., for plugins or extensions to an application)."
msgstr ""

#: ../../PyMOTW/imp/index.rst:19
# f1d5e7ae27d5402c8e870cc453f71854
msgid "Example Package"
msgstr ""

#: ../../PyMOTW/imp/index.rst:21
# 7dae536a4f8f4924af2209d836f8b281
msgid "The examples below use a package called \"example\" with ``__init__.py``:"
msgstr ""

#: ../../PyMOTW/imp/index.rst:27
# 6596b9aef65d4ebf8c42668dc54fbeb0
msgid "and module called submodule containing:"
msgstr ""

#: ../../PyMOTW/imp/index.rst:33
# b5b26099be9d40bdaa99691f260288ed
msgid "Watch for the text from the print statements in the sample output when the package or module are imported."
msgstr ""

#: ../../PyMOTW/imp/index.rst:37
# c52bd94c950846b4822f944a697a6496
msgid "Module Types"
msgstr ""

#: ../../PyMOTW/imp/index.rst:39
# 15b4cde12e2a4312a4bcbff3a6dae6b4
msgid "Python supports several styles of modules. Each requires its own handling when opening the module and adding it to the namespace. Some of the supported types and those parameters can be listed by the ``get_suffixes()`` function."
msgstr ""

#: ../../PyMOTW/imp/index.rst:47
# ede3482f09334ec6bcc0e4385fcb1255
msgid "``get_suffixes()`` returns a sequence of tuples containing the file extension, mode to use for opening the file, and a type code from a constant defined in the module. This table is incomplete, because some of the importable module or package types do not correspond to single files."
msgstr ""

#: ../../PyMOTW/imp/index.rst:72
# 418691de5c18448eba89e7abb96a72a6
msgid "Finding Modules"
msgstr ""

#: ../../PyMOTW/imp/index.rst:74
# 2e645f0240ac468681f7fb4d81465b26
msgid "The first step to loading a module is finding it. ``find_module()`` scans the import search path looking for a package or module with the given name. It returns an open file handle (if appropriate for the type), filename where the module was found, and \"description\" (a tuple such as those returned by ``get_suffixes()``)."
msgstr ""

#: ../../PyMOTW/imp/index.rst:84
# c5d6fa4a08514edd8a0ce4f75c329050
msgid "``find_module()`` does not pay attention to dotted package names (\"example.submodule\"), so the caller has to take care to pass the correct path for any nested modules. That means that when importing the submodule from the package, you need to give a path that points to the package directory for ``find_module()`` to locate the module you're looking for."
msgstr ""

#: ../../PyMOTW/imp/index.rst:107
# f9cfefc0078047b592c712948e1ddbb6
msgid "If ``find_module()`` cannot locate the module, it raises an :ref:`ImportError <exceptions-ImportError>`."
msgstr ""

#: ../../PyMOTW/imp/index.rst:127
# 6174be91055842d28925b66b2b0ee804
msgid "Loading Modules"
msgstr ""

#: ../../PyMOTW/imp/index.rst:129
# 14f9c8194148483c80afd4e2a79e247a
msgid "Once you have found the module, use ``load_module()`` to actually import it.  ``load_module()`` takes the full dotted path module name and the values returned by ``find_module()`` (the open file handle, filename, and description tuple)."
msgstr ""

#: ../../PyMOTW/imp/index.rst:138
# 80e127dd3fb5446ebd39def14cc88976
msgid "``load_module()`` creates a new module object with the name given, loads the code for it, and adds it to :ref:`sys.modules <sys-modules>`."
msgstr ""

#: ../../PyMOTW/imp/index.rst:152
# b742124d59b84d099ae7a1405a3df9d7
msgid "If you call ``load_module()`` for a module which has already been imported, the effect is like calling ``reload()`` on the existing module object."
msgstr ""

#: ../../PyMOTW/imp/index.rst:160
# 01fdc0e6476e438da79fe6c252aff5de
msgid "Instead of a creating a new module, the contents of the existing module are simply replaced."
msgstr ""

#: ../../PyMOTW/imp/index.rst:179
# 7b3c343cc9f14e4ea1caa68b41c1a299
msgid "`imp <http://docs.python.org/library/imp.html>`_"
msgstr ""

#: ../../PyMOTW/imp/index.rst:179
# 5d5433d2855244e8b636fc95365f467f
msgid "The standard library documentation for this module."
msgstr ""

#: ../../PyMOTW/imp/index.rst:182
# 123fdfcef1c544fcaf00a48ecf6f39ba
msgid ":ref:`sys-imports`"
msgstr ""

#: ../../PyMOTW/imp/index.rst:182
# 816be983733149caa80e649e8b4f8e59
msgid "Import hooks, the module search path, and other related machinery."
msgstr ""

#: ../../PyMOTW/imp/index.rst:185
# 8e111c36d626466c85e81f551a2b0d5f
msgid ":mod:`inspect`"
msgstr ""

#: ../../PyMOTW/imp/index.rst:185
# 59f321aefaf2484a89c96e55e5dfbab1
msgid "Load information from a module programmatically."
msgstr ""

#: ../../PyMOTW/imp/index.rst:188
# 84575a1fdb5d483b8c919b5d09d71699
msgid ":pep:`302`"
msgstr ""

#: ../../PyMOTW/imp/index.rst:188
# 759adacc9b0c4784845bcf7cc12b8fd2
msgid "New import hooks."
msgstr ""

#: ../../PyMOTW/imp/index.rst:190
# e5ce3831209c4b86b6234bc852eccdb2
msgid ":pep:`369`"
msgstr ""

#: ../../PyMOTW/imp/index.rst:191
# 0635cc00e2f247c3addf148599be7571
msgid "Post import hooks."
msgstr ""

