#
msgid ""
msgstr ""
"Project-Id-Version: Python Module of the Week 2.1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-10-06 13:35-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../PyMOTW/filecmp/index.rst:3
msgid "filecmp -- Compare files"
msgstr ""

#: ../../PyMOTW/filecmp/index.rst:8
msgid "Compare files and directories on the filesystem."
msgstr ""

#: ../../PyMOTW/filecmp/index.rst:9
msgid "2.1 and later"
msgstr ""

#: ../../PyMOTW/filecmp/index.rst:12
msgid "Example Data"
msgstr ""

#: ../../PyMOTW/filecmp/index.rst:14
msgid ""
"The examples in the discussion below use a set of test files created by "
"``filecmp_mkexamples.py``."
msgstr ""

#: ../../PyMOTW/filecmp/index.rst:63
msgid ""
"The same directory structure is repeated one time under the \"common_dir\" "
"directories to give interesting recursive comparison options."
msgstr ""

#: ../../PyMOTW/filecmp/index.rst:67
msgid "Comparing Files"
msgstr ""

#: ../../PyMOTW/filecmp/index.rst:69
msgid ""
"The filecmp module includes functions and a class for comparing files and "
"directories on the filesystem. If you need to compare two files, use the "
"cmp() function."
msgstr ""

#: ../../PyMOTW/filecmp/index.rst:77
msgid ""
"By default, cmp() looks only at the information available from os.stat(). "
"The shallow argument tells cmp() whether to look at the contents of the "
"file, as well. The default is to perform a shallow comparison, without "
"looking inside the files. Notice that files of the same size created at the "
"same time seem to be the same if their contents are not compared."
msgstr ""

#: ../../PyMOTW/filecmp/index.rst:98
msgid ""
"To compare a set of files in two directories without recursing, use "
"filecmp.cmpfiles(). The arguments are the names of the directories and a "
"list of files to be checked in the two locations. The list of common files "
"should contain only filenames (directories always result in a mismatch) and "
"the files must be present in both locations. The code below shows a simple "
"way to build the common list. If you have a shorter formula, post it in the "
"comments. The comparison also takes the shallow flag, just as with cmp()."
msgstr ""

#: ../../PyMOTW/filecmp/index.rst:110
msgid ""
"cmpfiles() returns three lists of filenames for files that match, files that"
" do not match, and files that could not be compared (due to permission "
"problems or for any other reason)."
msgstr ""

#: ../../PyMOTW/filecmp/index.rst:131
msgid "Using dircmp"
msgstr ""

#: ../../PyMOTW/filecmp/index.rst:133
msgid ""
"The functions described above are suitable for relatively simple "
"comparisons, but for recursive comparison of large directory trees or for "
"more complete analysis, the dircmp class is more useful. In its simplest use"
" case, you can print a report comparing two directories with the report() "
"method:"
msgstr ""

#: ../../PyMOTW/filecmp/index.rst:142
msgid ""
"The output is a plain-text report showing the results of just the contents "
"of the directories given, without recursing. In this case, the file "
"\"not_the_same\" is thought to be the same because the contents are not "
"being compared. There is no way to have dircmp compare the contents of files"
" like cmp() can."
msgstr ""

#: ../../PyMOTW/filecmp/index.rst:165
msgid ""
"For more detail, and a recursive comparison, use report_full_closure():"
msgstr ""

#: ../../PyMOTW/filecmp/index.rst:171
msgid "The output includes comparisons of all parallel subdirectories."
msgstr ""

#: ../../PyMOTW/filecmp/index.rst:212
msgid "Using differences in your program"
msgstr ""

#: ../../PyMOTW/filecmp/index.rst:214
msgid ""
"Besides producing printed reports, dircmp calculates useful lists of files "
"you can use in your programs directly. Each of the following attributes is "
"calculated only when requested, so instantiating a dircmp does not incur a "
"lot of extra overhead."
msgstr ""

#: ../../PyMOTW/filecmp/index.rst:219
msgid ""
"The files and subdirectories contained in the directories being compared are"
" listed in left_list and right_list:"
msgstr ""

#: ../../PyMOTW/filecmp/index.rst:252
msgid ""
"The inputs can be filtered by passing a list of names to ignore to the "
"constructor. By default the names RCS, CVS, and tags are ignored."
msgstr ""

#: ../../PyMOTW/filecmp/index.rst:259
msgid ""
"In this case, the \"common_file\" is left out of the list of files to be "
"compared."
msgstr ""

#: ../../PyMOTW/filecmp/index.rst:286
msgid ""
"The set of files common to both input directories is maintained in common, "
"and the files unique to each directory are listed in left_only, and "
"right_only."
msgstr ""

#: ../../PyMOTW/filecmp/index.rst:312
msgid ""
"The common members can be further broken down into files, directories and "
"\"funny\" items (anything that has a different type in the two directories "
"or where there is an error from os.stat())."
msgstr ""

#: ../../PyMOTW/filecmp/index.rst:320
msgid ""
"In the example data, the item named \"file_in_dir1\" is a file in one "
"directory and a subdirectory in the other, so it shows up in the \"funny\" "
"list."
msgstr ""

#: ../../PyMOTW/filecmp/index.rst:345
msgid "The differences between files are broken down similarly:"
msgstr ""

#: ../../PyMOTW/filecmp/index.rst:351
msgid ""
"Remember, the file \"not_the_same\" is only being compared via os.stat, and "
"the contents are not examined."
msgstr ""

#: ../../PyMOTW/filecmp/index.rst:367
msgid ""
"Finally, the subdirectories are also mapped to new dircmp objects in the "
"attribute subdirs to allow easy recursive comparison."
msgstr ""

#: ../../PyMOTW/filecmp/index.rst:383
msgid "`filecmp <http://docs.python.org/library/filecmp.html>`_"
msgstr ""

#: ../../PyMOTW/filecmp/index.rst:383
msgid "The standard library documentation for this module."
msgstr ""

#: ../../PyMOTW/filecmp/index.rst:386
msgid ":ref:`os-directories` from :mod:`os`"
msgstr ""

#: ../../PyMOTW/filecmp/index.rst:386
msgid "Listing the contents of a directory."
msgstr ""

#: ../../PyMOTW/filecmp/index.rst:388
msgid ":mod:`difflib`"
msgstr ""

#: ../../PyMOTW/filecmp/index.rst:389
msgid "Computing the differences between two sequences."
msgstr ""
