#
msgid ""
msgstr ""
"Project-Id-Version: Python Module of the Week 2.1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-10-06 13:35-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../PyMOTW/bz2/index.rst:3
msgid "bz2 -- bzip2 compression"
msgstr ""

#: ../../PyMOTW/bz2/index.rst:8
msgid "bzip2 compression"
msgstr ""

#: ../../PyMOTW/bz2/index.rst:9
msgid "2.3 and later"
msgstr ""

#: ../../PyMOTW/bz2/index.rst:11
msgid ""
"The :mod:`bz2` module is an interface for the bzip2 library, used to "
"compress data for storage or transmission.  There are three APIs provided:"
msgstr ""

#: ../../PyMOTW/bz2/index.rst:15
msgid ""
"\"one shot\" compression/decompression functions for operating on a blob of "
"data"
msgstr ""

#: ../../PyMOTW/bz2/index.rst:16
msgid ""
"iterative compression/decompression objects for working with streams of data"
msgstr ""

#: ../../PyMOTW/bz2/index.rst:17
msgid ""
"a file-like class that supports reading and writing as with an uncompressed "
"file"
msgstr ""

#: ../../PyMOTW/bz2/index.rst:20
msgid "One-shot Operations in Memory"
msgstr ""

#: ../../PyMOTW/bz2/index.rst:22
msgid ""
"The simplest way to work with bz2 requires holding all of the data to be "
"compressed or decompressed in memory, and then using :func:`compress()` and "
":func:`decompress()`."
msgstr ""

#: ../../PyMOTW/bz2/index.rst:52
msgid ""
"Notice that for short text, the compressed version can be significantly "
"longer.  While the actual results depend on the input data, for short bits "
"of text it is interesting to observe the compression overhead."
msgstr ""

#: ../../PyMOTW/bz2/index.rst:81
msgid "Working with Streams"
msgstr ""

#: ../../PyMOTW/bz2/index.rst:83
msgid ""
"The in-memory approach is not practical for real-world use cases, since you "
"rarely want to hold both the entire compressed and uncompressed data sets in"
" memory at the same time.  The alternative is to use :class:`BZ2Compressor` "
"and :class:`BZ2Decompressor` objects to work with streams of data, so that "
"the entire data set does not have to fit into memory."
msgstr ""

#: ../../PyMOTW/bz2/index.rst:90
msgid ""
"The simple server below responds to requests consisting of filenames by "
"writing a compressed version of the file to the socket used to communicate "
"with the client.  It has some artificial chunking in place to illustrate the"
" buffering behavior that happens when the data passed to :func:`compress()` "
"or :func:`decompress()` doesn't result in a complete block of compressed or "
"uncompressed output."
msgstr ""

#: ../../PyMOTW/bz2/index.rst:99
msgid ""
"This implementation has obvious security implications.  Do not run it on a "
"server on the open internet or in any environment where security might be an"
" issue."
msgstr ""

#: ../../PyMOTW/bz2/index.rst:231
msgid "Mixed Content Streams"
msgstr ""

#: ../../PyMOTW/bz2/index.rst:233
msgid ""
":class:`BZ2Decompressor` can also be used in situations where compressed and"
" uncompressed data is mixed together.  After decompressing all of the data, "
"the *unused_data* attribute contains any data not used."
msgstr ""

#: ../../PyMOTW/bz2/index.rst:257
msgid "Writing Compressed Files"
msgstr ""

#: ../../PyMOTW/bz2/index.rst:259
msgid ""
":class:`BZ2File` can be used to write to and read from bzip2-compressed "
"files using the usual methods for writing and reading data.  To write data "
"into a compressed file, open the file with mode ``'w'``."
msgstr ""

#: ../../PyMOTW/bz2/index.rst:283
msgid ""
"Different compression levels can be used by passing a *compresslevel* "
"argument.  Valid values range from 1 to 9, inclusive.  Lower values are "
"faster and result in less compression.  Higher values are slower and "
"compress more, up to a point."
msgstr ""

#: ../../PyMOTW/bz2/index.rst:292
msgid ""
"The center column of numbers in the output of the script is the size in "
"bytes of the files produced.  As you see, for this input data, the higher "
"compression values do not always pay off in decreased storage space for the "
"same input data.  Results will vary for other inputs."
msgstr ""

#: ../../PyMOTW/bz2/index.rst:311
msgid ""
"A :class:`BZ2File` instance also includes a :func:`writelines()` method that"
" can be used to write a sequence of strings."
msgstr ""

#: ../../PyMOTW/bz2/index.rst:343
msgid "Reading Compressed Files"
msgstr ""

#: ../../PyMOTW/bz2/index.rst:345
msgid ""
"To read data back from previously compressed files, simply open the file "
"with mode ``'r'``."
msgstr ""

#: ../../PyMOTW/bz2/index.rst:352
msgid ""
"This example reads the file written by ``bz2_file_write.py`` from the "
"previous section."
msgstr ""

#: ../../PyMOTW/bz2/index.rst:368
msgid ""
"While reading a file, it is also possible to seek and read only part of the "
"data."
msgstr ""

#: ../../PyMOTW/bz2/index.rst:375
msgid ""
"The :func:`seek()` position is relative to the *uncompressed* data, so the "
"caller does not even need to know that the data file is compressed."
msgstr ""

#: ../../PyMOTW/bz2/index.rst:400
msgid "`bz2 <http://docs.python.org/library/bz2.html>`_"
msgstr ""

#: ../../PyMOTW/bz2/index.rst:400
msgid "The standard library documentation for this module."
msgstr ""

#: ../../PyMOTW/bz2/index.rst:403
msgid "`bzip2.org <http://www.bzip.org/>`_"
msgstr ""

#: ../../PyMOTW/bz2/index.rst:403
msgid "The home page for bzip2."
msgstr ""

#: ../../PyMOTW/bz2/index.rst:406
msgid ":mod:`zlib`"
msgstr ""

#: ../../PyMOTW/bz2/index.rst:406
msgid "The zlib module for GNU zip compression."
msgstr ""

#: ../../PyMOTW/bz2/index.rst:409
msgid ":mod:`gzip`"
msgstr ""

#: ../../PyMOTW/bz2/index.rst:409
msgid "A file-like interface to GNU zip compressed files."
msgstr ""

#: ../../PyMOTW/bz2/index.rst:411
msgid ":mod:`SocketServer`"
msgstr ""

#: ../../PyMOTW/bz2/index.rst:412
msgid "Base classes for creating your own network servers."
msgstr ""
