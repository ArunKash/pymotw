#
msgid ""
msgstr ""
"Project-Id-Version: Python Module of the Week 2.1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-10-06 13:35-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../PyMOTW/zipfile/index.rst:3
msgid "zipfile -- Read and write ZIP archive files"
msgstr ""

#: ../../PyMOTW/zipfile/index.rst:8
msgid "Read and write ZIP archive files."
msgstr ""

#: ../../PyMOTW/zipfile/index.rst:9
msgid "1.6 and later"
msgstr ""

#: ../../PyMOTW/zipfile/index.rst:11
msgid "The :mod:`zipfile` module can be used to manipulate ZIP archive files."
msgstr ""

#: ../../PyMOTW/zipfile/index.rst:14
msgid "Limitations"
msgstr ""

#: ../../PyMOTW/zipfile/index.rst:16
msgid ""
"The :mod:`zipfile` module does not support ZIP files with appended comments,"
" or multi-disk ZIP files. It does support ZIP files larger than 4 GB that "
"use the ZIP64 extensions."
msgstr ""

#: ../../PyMOTW/zipfile/index.rst:21
msgid "Testing ZIP Files"
msgstr ""

#: ../../PyMOTW/zipfile/index.rst:23
msgid ""
"The :func:`is_zipfile()` function returns a boolean indicating whether or "
"not the filename passed as an argument refers to a valid ZIP file."
msgstr ""

#: ../../PyMOTW/zipfile/index.rst:30
msgid ""
"Notice that if the file does not exist at all, :func:`is_zipfile()` returns "
"False."
msgstr ""

#: ../../PyMOTW/zipfile/index.rst:49
msgid "Reading Meta-data from a ZIP Archive"
msgstr ""

#: ../../PyMOTW/zipfile/index.rst:51
msgid ""
"Use the :class:`ZipFile` class to work directly with a ZIP archive. It "
"supports methods for reading data about existing archives as well as "
"modifying the archives by adding additional files."
msgstr ""

#: ../../PyMOTW/zipfile/index.rst:55
msgid ""
"To read the names of the files in an existing archive, use "
":func:`namelist()`:"
msgstr ""

#: ../../PyMOTW/zipfile/index.rst:62
msgid ""
"The return value is a list of strings with the names of the archive "
"contents:"
msgstr ""

#: ../../PyMOTW/zipfile/index.rst:77
msgid ""
"The list of names is only part of the information available from the "
"archive, though. To access all of the meta-data about the ZIP contents, use "
"the :func:`infolist()` or :func:`getinfo()` methods."
msgstr ""

#: ../../PyMOTW/zipfile/index.rst:85
msgid ""
"There are additional fields other than those printed here, but deciphering "
"the values into anything useful requires careful reading of the `PKZIP "
"Application Note`_ with the ZIP file specification."
msgstr ""

#: ../../PyMOTW/zipfile/index.rst:108
msgid ""
"If you know in advance the name of the archive member, you can retrieve its "
":class:`ZipInfo` object with :func:`getinfo()`."
msgstr ""

#: ../../PyMOTW/zipfile/index.rst:115
msgid ""
"If the archive member is not present, :func:`getinfo()` raises a "
":ref:`KeyError <exceptions-KeyError>`."
msgstr ""

#: ../../PyMOTW/zipfile/index.rst:132
msgid "Extracting Archived Files From a ZIP Archive"
msgstr ""

#: ../../PyMOTW/zipfile/index.rst:134
msgid ""
"To access the data from an archive member, use the :func:`read()` method, "
"passing the member's name."
msgstr ""

#: ../../PyMOTW/zipfile/index.rst:141
msgid "The data is automatically decompressed for you, if necessary."
msgstr ""

#: ../../PyMOTW/zipfile/index.rst:162
msgid "Creating New Archives"
msgstr ""

#: ../../PyMOTW/zipfile/index.rst:164
msgid ""
"To create a new archive, simple instantiate the :class:`ZipFile` with a mode"
" of ``'w'``.  Any existing file is truncated and a new archive is started. "
"To add files, use the :func:`write()` method."
msgstr ""

#: ../../PyMOTW/zipfile/index.rst:172
msgid "By default, the contents of the archive are not compressed:"
msgstr ""

#: ../../PyMOTW/zipfile/index.rst:189
msgid ""
"To add compression, the :mod:`zlib` module is required. If :mod:`zlib` is "
"available, you can set the compression mode for individual files or for the "
"archive as a whole using ``zipfile.ZIP_DEFLATED``. The default compression "
"mode is ``zipfile.ZIP_STORED``."
msgstr ""

#: ../../PyMOTW/zipfile/index.rst:198
msgid "This time the archive member is compressed:"
msgstr ""

#: ../../PyMOTW/zipfile/index.rst:217
msgid "Using Alternate Archive Member Names"
msgstr ""

#: ../../PyMOTW/zipfile/index.rst:219
msgid ""
"It is easy to add a file to an archive using a name other than the original "
"file name, by passing the arcname argument to :func:`write()`."
msgstr ""

#: ../../PyMOTW/zipfile/index.rst:226
msgid "There is no sign of the original filename in the archive:"
msgstr ""

#: ../../PyMOTW/zipfile/index.rst:240
msgid "Writing Data from Sources Other Than Files"
msgstr ""

#: ../../PyMOTW/zipfile/index.rst:242
msgid ""
"Sometimes it is necessary to write to a ZIP archive using data that did not "
"come from an existing file. Rather than writing the data to a file, then "
"adding that file to the ZIP archive, you can use the :func:`writestr()` "
"method to add a string of bytes to the archive directly."
msgstr ""

#: ../../PyMOTW/zipfile/index.rst:253
msgid ""
"In this case, I used the compress argument to :class:`ZipFile` to compress "
"the data, since :func:`writestr()` does not take compress as an argument."
msgstr ""

#: ../../PyMOTW/zipfile/index.rst:268
msgid "This data did not exist in a file before being added to the ZIP file"
msgstr ""

#: ../../PyMOTW/zipfile/index.rst:271
msgid "Writing with a ZipInfo Instance"
msgstr ""

#: ../../PyMOTW/zipfile/index.rst:273
msgid ""
"Normally, the modification date is computed for you when you add a file or "
"string to the archive. When using :func:`writestr()`, you can also pass a "
":class:`ZipInfo` instance to define the modification date and other meta-"
"data yourself."
msgstr ""

#: ../../PyMOTW/zipfile/index.rst:282
msgid ""
"In this example, I set the modified time to the current time, compress the "
"data, provide a false value for ``create_system``, and add a comment."
msgstr ""

#: ../../PyMOTW/zipfile/index.rst:297
msgid "Appending to Files"
msgstr ""

#: ../../PyMOTW/zipfile/index.rst:299
msgid ""
"In addition to creating new archives, it is possible to append to an "
"existing archive or add an archive at the end of an existing file (such as a"
" .exe file for a self-extracting archive). To open a file to append to it, "
"use mode ``'a'``."
msgstr ""

#: ../../PyMOTW/zipfile/index.rst:308
msgid "The resulting archive ends up with 2 members:"
msgstr ""

#: ../../PyMOTW/zipfile/index.rst:342
msgid "Python ZIP Archives"
msgstr ""

#: ../../PyMOTW/zipfile/index.rst:344
msgid ""
"Since version 2.3 Python has had the ability to :ref:`import modules from "
"inside ZIP archives <zipimport-ref>` if those archives appear in "
":ref:`sys.path <sys-path>`. The :class:`PyZipFile` class can be used to "
"construct a module suitable for use in this way. When you use the extra "
"method :func:`writepy()`, :class:`PyZipFile` scans a directory for ``.py`` "
"files and adds the corresponding ``.pyo`` or ``.pyc`` file to the archive. "
"If neither compiled form exists, a ``.pyc`` file is created and added."
msgstr ""

#: ../../PyMOTW/zipfile/index.rst:357
msgid ""
"With the debug attribute of the :class:`PyZipFile` set to 3, verbose "
"debugging is enabled and you can observe as it compiles each ``.py`` file it"
" finds."
msgstr ""

#: ../../PyMOTW/zipfile/index.rst:414
msgid "`zipfile <http://docs.python.org/library/zipfile.html>`_"
msgstr ""

#: ../../PyMOTW/zipfile/index.rst:414
msgid "The standard library documentation for this module."
msgstr ""

#: ../../PyMOTW/zipfile/index.rst:417
msgid ":mod:`zlib`"
msgstr ""

#: ../../PyMOTW/zipfile/index.rst:417
msgid "ZIP compression library"
msgstr ""

#: ../../PyMOTW/zipfile/index.rst:420
msgid ":mod:`tarfile`"
msgstr ""

#: ../../PyMOTW/zipfile/index.rst:420
msgid "Read and write tar archives"
msgstr ""

#: ../../PyMOTW/zipfile/index.rst:423
msgid ":mod:`zipimport`"
msgstr ""

#: ../../PyMOTW/zipfile/index.rst:423
msgid "Import Python modules from ZIP archive."
msgstr ""

#: ../../PyMOTW/zipfile/index.rst:425
msgid "`PKZIP Application Note`_"
msgstr ""

#: ../../PyMOTW/zipfile/index.rst:426
msgid "Official specification for the ZIP archive format."
msgstr ""
