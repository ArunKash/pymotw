#
msgid ""
msgstr ""
"Project-Id-Version: Python Module of the Week 2.1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-10-06 13:35-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../PyMOTW/datetime/index.rst:3
msgid "datetime -- Date/time value manipulation"
msgstr ""

#: ../../PyMOTW/datetime/index.rst:8
msgid ""
"The datetime module includes functions and classes for doing date and time "
"parsing, formatting, and arithmetic."
msgstr ""

#: ../../PyMOTW/datetime/index.rst:9
msgid "2.3 and later"
msgstr ""

#: ../../PyMOTW/datetime/index.rst:11
msgid ""
":mod:`datetime` contains functions and classes for working with dates and "
"times, separatley and together."
msgstr ""

#: ../../PyMOTW/datetime/index.rst:15
msgid "Times"
msgstr ""

#: ../../PyMOTW/datetime/index.rst:17
msgid ""
"Time values are represented with the :class:`time` class. Times have "
"attributes for hour, minute, second, and microsecond. They can also include "
"time zone information. The arguments to initialize a :class:`time` instance "
"are optional, but the default of ``0`` is unlikely to be what you want."
msgstr ""

#: ../../PyMOTW/datetime/index.rst:44
msgid ""
"A time instance only holds values of time, and not a date associated with "
"the time."
msgstr ""

#: ../../PyMOTW/datetime/index.rst:51
msgid ""
"The *min* and *max* class attributes reflect the valid range of times in a "
"single day."
msgstr ""

#: ../../PyMOTW/datetime/index.rst:68
msgid "The resolution for time is limited to whole microseconds."
msgstr ""

#: ../../PyMOTW/datetime/index.rst:74
msgid ""
"In fact, using floating point numbers for the microsecond argument generates"
" a :ref:`TypeError <exceptions-TypeError>`."
msgstr ""

#: ../../PyMOTW/datetime/index.rst:94
msgid "Dates"
msgstr ""

#: ../../PyMOTW/datetime/index.rst:96
msgid ""
"Calendar date values are represented with the :class:`date` class. Instances"
" have attributes for year, month, and day. It is easy to create a date "
"representing today's date using the :func:`today()` class method."
msgstr ""

#: ../../PyMOTW/datetime/index.rst:105
msgid "This example prints the current date in several formats:"
msgstr ""

#: ../../PyMOTW/datetime/index.rst:133
msgid ""
"There are also class methods for creating instances from integers (using "
"proleptic Gregorian ordinal values, which starts counting from Jan. 1 of the"
" year 1) or POSIX timestamp values."
msgstr ""

#: ../../PyMOTW/datetime/index.rst:141
msgid ""
"This example illustrates the different value types used by "
":func:`fromordinal()` and :func:`fromtimestamp()`."
msgstr ""

#: ../../PyMOTW/datetime/index.rst:159
msgid ""
"As with :class:`time`, the range of date values supported can be determined "
"using the *min* and *max* attributes."
msgstr ""

#: ../../PyMOTW/datetime/index.rst:166
msgid "The resolution for dates is whole days."
msgstr ""

#: ../../PyMOTW/datetime/index.rst:182
msgid ""
"Another way to create new date instances uses the :func:`replace()` method "
"of an existing date. For example, you can change the year, leaving the day "
"and month alone."
msgstr ""

#: ../../PyMOTW/datetime/index.rst:204
msgid "timedeltas"
msgstr ""

#: ../../PyMOTW/datetime/index.rst:206
msgid ""
"Using :func:`replace()` is not the only way to calculate future/past dates. "
"You can use :mod:`datetime` to perform basic arithmetic on date values via "
"the :class:`timedelta` class. Subtracting dates produces a "
":class:`timedelta`, and a :class:`timedelta` can be added or subtracted from"
" a date to produce another date. The internal values for a "
":class:`timedelta` are stored in days, seconds, and microseconds."
msgstr ""

#: ../../PyMOTW/datetime/index.rst:218
msgid ""
"Intermediate level values passed to the constructor are converted into days,"
" seconds, and microseconds."
msgstr ""

#: ../../PyMOTW/datetime/index.rst:241
msgid "Date Arithmetic"
msgstr ""

#: ../../PyMOTW/datetime/index.rst:243
msgid ""
"Date math uses the standard arithmetic operators. This example with date "
"objects illustrates using :class:`timedelta` objects to compute new dates, "
"and subtracting date instances to produce timedeltas (including a negative "
"delta value)."
msgstr ""

#: ../../PyMOTW/datetime/index.rst:271
msgid "Comparing Values"
msgstr ""

#: ../../PyMOTW/datetime/index.rst:273
msgid ""
"Both date and time values can be compared using the standard operators to "
"determine which is earlier or later."
msgstr ""

#: ../../PyMOTW/datetime/index.rst:301
msgid "Combining Dates and Times"
msgstr ""

#: ../../PyMOTW/datetime/index.rst:303
msgid ""
"Use the :class:`datetime` class to hold values consisting of both date and "
"time components. As with :class:`date`, there are several convenient class "
"methods to make creating :class:`datetime` instances from other common "
"values."
msgstr ""

#: ../../PyMOTW/datetime/index.rst:312
msgid ""
"As you might expect, the :class:`datetime` instance has all of the "
"attributes of both a date and a time object."
msgstr ""

#: ../../PyMOTW/datetime/index.rst:337
msgid ""
"Just as with date, datetime provides convenient class methods for creating "
"new instances. It also includes :func:`fromordinal()` and "
":func:`fromtimestamp()`. In addition, :func:`combine()` can be useful if you"
" already have a date instance and time instance and want to create a "
"datetime."
msgstr ""

#: ../../PyMOTW/datetime/index.rst:362
msgid "Formatting and Parsing"
msgstr ""

#: ../../PyMOTW/datetime/index.rst:364
msgid ""
"The default string representation of a datetime object uses the `ISO 8601`_ "
"format (``YYYY-MM-DDTHH:MM:SS.mmmmmm``). Alternate formats can be generated "
"using :func:`strftime()`. Similarly, if your input data includes timestamp "
"values parsable with :func:`time.strptime()`, then "
":func:`datetime.strptime()` is a convenient way to convert them to datetime "
"instances."
msgstr ""

#: ../../PyMOTW/datetime/index.rst:390
msgid "Time Zones"
msgstr ""

#: ../../PyMOTW/datetime/index.rst:392
msgid ""
"Within :mod:`datetime`, time zones are represented by subclasses of "
":class:`tzinfo`. Since :class:`tzinfo` is an abstract base class, you need "
"to define a subclass and provide appropriate implementations for a few "
"methods to make it useful. Unfortunately, :mod:`datetime` does not include "
"any actual implementations ready to be used, although the documentation does"
" provide a few sample implementations. Refer to the standard library "
"documentation page for examples using fixed offsets as well as a DST-aware "
"class and more details about creating your own class.  pytz_ is also a good "
"source for time zone implementation details."
msgstr ""

#: ../../PyMOTW/datetime/index.rst:406
msgid "`datetime <http://docs.python.org/lib/module-datetime.html>`_"
msgstr ""

#: ../../PyMOTW/datetime/index.rst:406
msgid "The standard library documentation for this module."
msgstr ""

#: ../../PyMOTW/datetime/index.rst:409
msgid ":mod:`calendar`"
msgstr ""

#: ../../PyMOTW/datetime/index.rst:409
msgid "The :mod:`calendar` module."
msgstr ""

#: ../../PyMOTW/datetime/index.rst:412
msgid ":mod:`time`"
msgstr ""

#: ../../PyMOTW/datetime/index.rst:412
msgid "The :mod:`time` module."
msgstr ""

#: ../../PyMOTW/datetime/index.rst:415
msgid "`dateutil <http://labix.org/python-dateutil>`_"
msgstr ""

#: ../../PyMOTW/datetime/index.rst:415
msgid ""
"dateutil from Labix extends the datetime module with additional features."
msgstr ""

#: ../../PyMOTW/datetime/index.rst:418
msgid ""
"`WikiPedia: Proleptic Gregorian calendar "
"<http://en.wikipedia.org/wiki/Proleptic_Gregorian_calendar>`_"
msgstr ""

#: ../../PyMOTW/datetime/index.rst:418
msgid "A description of the Gregorian calendar system."
msgstr ""

#: ../../PyMOTW/datetime/index.rst:421
msgid "pytz_"
msgstr ""

#: ../../PyMOTW/datetime/index.rst:421
msgid "World Time Zone database"
msgstr ""

#: ../../PyMOTW/datetime/index.rst:423
msgid "`ISO 8601`_"
msgstr ""

#: ../../PyMOTW/datetime/index.rst:424
msgid "The standard for numeric representation of Dates and Time"
msgstr ""
